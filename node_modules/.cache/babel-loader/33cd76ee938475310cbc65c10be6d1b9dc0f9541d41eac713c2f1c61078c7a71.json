{"ast":null,"code":"var _jsxFileName = \"/Users/abinop/code/CosmoCode/cosmo-web-public/src/components/ExerciseGame.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef, useMemo, useCallback } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { useWebSocket } from '../contexts/WebSocketContext';\nimport wsService from '../services/WebSocketService';\nimport useMIDISound from '../hooks/useMIDISound';\nimport useBackgroundMusic from '../hooks/useBackgroundMusic';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst colorMap = [{\n  name: 'blue',\n  rgb: [0, 0, 4],\n  tailwind: 'border-blue-500',\n  bgTailwind: 'bg-blue-500'\n}, {\n  name: 'green',\n  rgb: [0, 4, 0],\n  tailwind: 'border-green-400',\n  bgTailwind: 'bg-green-400'\n}, {\n  name: 'yellow',\n  rgb: [4, 3, 0],\n  tailwind: 'border-yellow-400',\n  bgTailwind: 'bg-yellow-400'\n}, {\n  name: 'orange',\n  rgb: [4, 1, 0],\n  tailwind: 'border-orange-400',\n  bgTailwind: 'bg-orange-400'\n}, {\n  name: 'red',\n  rgb: [4, 0, 0],\n  tailwind: 'border-red-400',\n  bgTailwind: 'bg-red-400'\n}, {\n  name: 'purple',\n  rgb: [4, 0, 4],\n  tailwind: 'border-purple-400',\n  bgTailwind: 'bg-purple-400'\n}];\nexport default function ExerciseGame() {\n  _s();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const {\n    numCosmos = 2,\n    duration = 30,\n    soundEnabled = true,\n    backgroundTrackId = 'brassbeat',\n    backgroundVolume = 30\n  } = location.state || {};\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [timeLeft, setTimeLeft] = useState(duration);\n  const [gameOver, setGameOver] = useState(false);\n  const [score, setScore] = useState(0);\n  const [gameStarted, setGameStarted] = useState(false);\n  const [feedback, setFeedback] = useState(null); // 'correct' or 'incorrect'\n  const {\n    connectedDevices,\n    deviceValues\n  } = useWebSocket();\n  const intervalRef = useRef(null);\n  const cosmosToUse = useMemo(() => connectedDevices.slice(0, numCosmos), [connectedDevices, numCosmos]);\n  const lastPressRef = useRef({});\n  const isUnmountingRef = useRef(false);\n  const previousButtonStates = useRef({});\n  const hasInitializedRef = useRef(false);\n  const currentLightingState = useRef({}); // Track current lighting state to prevent unnecessary updates\n\n  // Initialize MIDI sound system\n  const playMIDINote = useMIDISound(soundEnabled);\n\n  // Initialize background music system\n  const {\n    selectedTrack,\n    setVolume\n  } = useBackgroundMusic(backgroundTrackId, gameStarted && !gameOver);\n\n  // Set background music volume\n  useEffect(() => {\n    setVolume(backgroundVolume / 100); // Convert percentage to 0-1 range\n  }, [backgroundVolume, setVolume]);\n\n  // Get the active device from cosmosToUse array\n  const activeDevice = useMemo(() => {\n    if (!cosmosToUse.length) return null;\n    const device = cosmosToUse[activeIndex];\n    // console.log(`[ExerciseGame] 🎯 Active device calculated:`, {\n    //   activeIndex,\n    //   totalDevices: cosmosToUse.length,\n    //   activeDevice: device,\n    //   allDevices: cosmosToUse.map(d => ({ id: d.id, name: d.name }))\n    // });\n    return device;\n  }, [cosmosToUse, activeIndex]);\n\n  // Handle button press for the active device\n  const handleButtonPress = useCallback(deviceId => {\n    // console.log(`[ExerciseGame] 🎯 handleButtonPress called with deviceId: ${deviceId}`);\n    // console.log(`[ExerciseGame] 🎯 activeDevice:`, activeDevice);\n    // console.log(`[ExerciseGame] 🎯 activeIndex: ${activeIndex}, cosmosToUse:`, cosmosToUse.map(d => d.id));\n\n    // Don't process button presses if game is over\n    if (gameOver) {\n      console.log(`[ExerciseGame] ❌ Button press ignored - game is over`);\n      return;\n    }\n    if (!activeDevice || deviceId !== activeDevice.id) {\n      console.log(`[ExerciseGame] ❌ Button press ignored - deviceId mismatch or no active device`);\n      console.log(`[ExerciseGame] ❌ Expected: ${activeDevice === null || activeDevice === void 0 ? void 0 : activeDevice.id}, Got: ${deviceId}`);\n      return;\n    }\n    console.log(`[ExerciseGame] ✅ Correct button press! Score: ${score + 1}, Moving from index ${activeIndex} to ${(activeIndex + 1) % cosmosToUse.length}`);\n\n    // Play MIDI note based on the current active index\n    playMIDINote(activeIndex, 100, 0.3);\n    setScore(s => s + 1);\n    setActiveIndex(i => (i + 1) % cosmosToUse.length);\n  }, [activeDevice, cosmosToUse, score, activeIndex, playMIDINote, gameOver]);\n  const checkButtonStates = useCallback(() => {\n    // Don't check button states if game is over\n    if (gameOver) {\n      return;\n    }\n    if (!gameStarted || !activeDevice || !deviceValues[activeDevice.id]) {\n      console.log(`[ExerciseGame] 🔍 checkButtonStates skipped:`, {\n        gameStarted,\n        hasActiveDevice: !!activeDevice,\n        activeDeviceId: activeDevice === null || activeDevice === void 0 ? void 0 : activeDevice.id,\n        hasDeviceValue: !!deviceValues[activeDevice === null || activeDevice === void 0 ? void 0 : activeDevice.id]\n      });\n      return;\n    }\n    const deviceValue = deviceValues[activeDevice.id];\n    const currentButtonState = deviceValue.buttonState;\n    const previousButtonState = previousButtonStates.current[activeDevice.id];\n\n    // Ensure previousButtonState is initialized\n    if (previousButtonState === undefined) {\n      previousButtonStates.current[activeDevice.id] = currentButtonState;\n      console.log(`[ExerciseGame] 🔍 Initialized previousButtonState for ${activeDevice.id} to ${currentButtonState}`);\n      return;\n    }\n    const wasReleased = previousButtonState === 0;\n    const isPressed = currentButtonState === 1;\n\n    // console.log('[ExerciseGame] 🔍 Checking button states:', {\n    //   deviceId: activeDevice.id,\n    //   currentButtonState,\n    //   previousButtonState,\n    //   wasReleased,\n    //   isPressed,\n    //   gameStarted,\n    //   hasDeviceValue: !!deviceValues[activeDevice.id],\n    //   timestamp: new Date().toISOString()\n    // });\n\n    if (wasReleased && isPressed) {\n      const now = Date.now();\n      if (!lastPressRef.current[activeDevice.id] || now - lastPressRef.current[activeDevice.id] > 500) {\n        lastPressRef.current[activeDevice.id] = now;\n        console.log(`[ExerciseGame] 🎯 Button pressed on device ${activeDevice.id} - calling handleButtonPress`);\n        handleButtonPress(activeDevice.id);\n      } else {\n        console.log(`[ExerciseGame] ⏰ Button press ignored due to debouncing (${now - lastPressRef.current[activeDevice.id]}ms since last press)`);\n      }\n    }\n    const wasPressed = previousButtonState === 1;\n    const isReleased = currentButtonState === 0;\n    if (wasPressed && isReleased) {\n      console.log(`[ExerciseGame] 🔄 Button released on device ${activeDevice.id}`);\n      // Don't set luminosity here - let the activeIndex effect handle it\n    }\n\n    // Update previous state\n    previousButtonStates.current[activeDevice.id] = currentButtonState;\n  }, [gameStarted, activeDevice, deviceValues, handleButtonPress, gameOver]);\n\n  // Check button states immediately when device values change\n  useEffect(() => {\n    if (gameStarted && !gameOver && activeDevice && deviceValues[activeDevice.id]) {\n      checkButtonStates();\n    }\n  }, [deviceValues, gameStarted, activeDevice, checkButtonStates, gameOver]);\n  useEffect(() => {\n    if (gameOver) return;\n    const interval = setInterval(() => {\n      if (!activeDevice) return;\n      checkButtonStates();\n    }, 250);\n    intervalRef.current = interval;\n    return () => clearInterval(interval);\n  }, [gameOver, checkButtonStates, activeDevice]);\n  useEffect(() => {\n    return () => {\n      if (!isUnmountingRef.current) {\n        isUnmountingRef.current = true;\n        cosmosToUse.forEach((device, idx) => {\n          // wsService.setMode(device.id, 4);\n          const [r, g, b] = colorMap[idx % colorMap.length].rgb;\n          wsService.setColor(device.id, r, g, b);\n          wsService.setLuminosity(device.id, 0);\n        });\n      }\n    };\n  }, []);\n  useEffect(() => {\n    if (!numCosmos || !duration) {\n      navigate('/exercise-settings');\n    }\n  }, [numCosmos, duration, navigate]);\n  useEffect(() => {\n    if (gameOver) return;\n\n    // Don't start countdown timer if duration is infinite (-1)\n    if (duration === -1) return;\n    intervalRef.current = setInterval(() => {\n      setTimeLeft(t => {\n        if (t <= 1) {\n          clearInterval(intervalRef.current);\n          setGameOver(true);\n          return 0;\n        }\n        return t - 1;\n      });\n    }, 1000);\n    return () => clearInterval(intervalRef.current);\n  }, [gameOver, duration]);\n  useEffect(() => {\n    if (cosmosToUse.length > 0 && !hasInitializedRef.current) {\n      hasInitializedRef.current = true;\n      console.log(`[ExerciseGame] 🎮 Initializing ${cosmosToUse.length} devices`);\n      cosmosToUse.forEach((device, idx) => {\n        // Set mode, color, and luminosity for each device\n        console.log(`[ExerciseGame] 🎮 Setting up device ${device.id} (index ${idx}) - Color: ${colorMap[idx % colorMap.length].name}, Luminosity: 0`);\n        const [r, g, b] = colorMap[idx % colorMap.length].rgb;\n        wsService.setColor(device.id, r, g, b);\n        wsService.setLuminosity(device.id, 0); // Start with zero luminosity\n        currentLightingState.current[device.id] = 0; // Initialize lighting state tracking\n\n        // Initialize button state immediately if available\n        if (deviceValues[device.id]) {\n          previousButtonStates.current[device.id] = deviceValues[device.id].buttonState;\n          console.log(`[ExerciseGame] 🎮 Initial button state for ${device.id}: ${deviceValues[device.id].buttonState}`);\n        } else {\n          // Initialize to released state if no device value available\n          previousButtonStates.current[device.id] = 0;\n          console.log(`[ExerciseGame] 🎮 Initialized button state for ${device.id} to 0 (released)`);\n        }\n      });\n\n      // Start the game immediately\n      console.log(`[ExerciseGame] 🎮 Game starting immediately`);\n      setGameStarted(true);\n    }\n  }, [cosmosToUse, deviceValues]); // Added deviceValues dependency to ensure proper initialization\n\n  // Light up only the active device\n  useEffect(() => {\n    if (gameStarted && cosmosToUse.length > 0) {\n      // If game is over, turn off all devices\n      if (gameOver) {\n        console.log(`[ExerciseGame] 💡 Game over - turning off all devices`);\n        cosmosToUse.forEach((device, idx) => {\n          if (currentLightingState.current[device.id] !== 0) {\n            console.log(`[ExerciseGame] 💡 Turning off device ${device.id} (index ${idx})`);\n            wsService.setLuminosity(device.id, 0);\n            currentLightingState.current[device.id] = 0;\n          }\n        });\n        return;\n      }\n      console.log(`[ExerciseGame] 💡 Setting device lighting - Active index: ${activeIndex}, Total devices: ${cosmosToUse.length}`);\n      cosmosToUse.forEach((device, idx) => {\n        const shouldBeLit = idx === activeIndex;\n        const luminosity = shouldBeLit ? 64 : 0;\n\n        // Only update if the lighting state has actually changed\n        if (currentLightingState.current[device.id] !== luminosity) {\n          console.log(`[ExerciseGame] 💡 ${shouldBeLit ? 'Lighting up' : 'Turning off'} device ${device.id} (index ${idx}) to luminosity ${luminosity}`);\n          wsService.setLuminosity(device.id, luminosity);\n          currentLightingState.current[device.id] = luminosity;\n        } else {\n          console.log(`[ExerciseGame] 💡 Skipping luminosity update for device ${device.id} - already at ${luminosity}`);\n        }\n      });\n    }\n  }, [activeIndex, gameStarted, gameOver]); // Added gameOver dependency\n\n  // --- UI ---\n  if (gameOver) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col items-center justify-center min-h-screen bg-white\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-8 rounded shadow-md w-full max-w-md text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-3xl font-bold mb-4\",\n          children: \"Game Over!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-xl mb-2\",\n          children: [\"Score: \", score]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => navigate('/exercise-settings'),\n          className: \"mt-4 bg-purple-600 text-white py-2 px-4 rounded-full hover:bg-purple-700 font-semibold\",\n          children: \"Back to Settings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen flex flex-col bg-white\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-between px-6 pt-4 pb-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate('/exercise-settings'),\n        className: \"rounded-full border-2 border-purple-400 text-purple-600 p-2 hover:bg-purple-50 transition\",\n        \"aria-label\": \"Back\",\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          width: \"28\",\n          height: \"28\",\n          fill: \"none\",\n          viewBox: \"0 0 24 24\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            stroke: \"currentColor\",\n            strokeWidth: \"2\",\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            d: \"M15 19l-7-7 7-7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 71\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 flex flex-col items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center gap-2 mb-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-xl\",\n            children: \"\\u23F3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-lg font-semibold\",\n            children: duration === -1 ? '∞' : `${String(Math.floor(timeLeft / 60)).padStart(2, '0')}:${String(timeLeft % 60).padStart(2, '0')}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-1\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"inline-flex items-center px-4 py-1 rounded-full bg-purple-100 text-purple-700 font-semibold text-base\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"mr-2 text-xl\",\n              children: \"\\uD83C\\uDFB5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 15\n            }, this), \" \", selectedTrack.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-2\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"inline-flex items-center px-4 py-1 rounded-full bg-green-100 text-green-700 font-semibold text-base\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"mr-2 text-xl\",\n              children: \"\\uD83C\\uDFC6\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 15\n            }, this), \" Score: \", score]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate('/exercise-settings'),\n        className: \"rounded-full border-2 border-gray-300 text-gray-600 p-2 hover:bg-gray-100 transition ml-2\",\n        \"aria-label\": \"End Game\",\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          width: \"28\",\n          height: \"28\",\n          fill: \"none\",\n          viewBox: \"0 0 24 24\",\n          children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"10\",\n            stroke: \"currentColor\",\n            strokeWidth: \"2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 71\n          }, this), /*#__PURE__*/_jsxDEV(\"rect\", {\n            x: \"9\",\n            y: \"9\",\n            width: \"6\",\n            height: \"6\",\n            rx: \"1\",\n            fill: \"currentColor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 141\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 flex flex-col items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-row items-center justify-center gap-12 mt-8\",\n        children: cosmosToUse.map((device, idx) => {\n          const isActive = idx === activeIndex;\n          const colorInfo = colorMap[idx % colorMap.length];\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `flex items-center justify-center rounded-full border-4 transition-all duration-200 ${isActive ? `${colorInfo.bgTailwind} border-white` : `${colorInfo.tailwind} bg-white`}`,\n            style: {\n              width: 180,\n              height: 180,\n              boxShadow: isActive ? '0 0 20px rgba(0, 0, 0, 0.3)' : 'none'\n            },\n            children: isActive && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-full h-full rounded-full opacity-20\",\n              style: {\n                background: 'radial-gradient(circle, rgba(255,255,255,0.3) 0%, transparent 70%)'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 19\n            }, this)\n          }, device.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 285,\n    columnNumber: 5\n  }, this);\n}\n_s(ExerciseGame, \"YgVB5xH7XVFeQlLkOQWwyAQWKmo=\", false, function () {\n  return [useLocation, useNavigate, useWebSocket, useMIDISound, useBackgroundMusic];\n});\n_c = ExerciseGame;\nvar _c;\n$RefreshReg$(_c, \"ExerciseGame\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useMemo","useCallback","useLocation","useNavigate","useWebSocket","wsService","useMIDISound","useBackgroundMusic","jsxDEV","_jsxDEV","colorMap","name","rgb","tailwind","bgTailwind","ExerciseGame","_s","location","navigate","numCosmos","duration","soundEnabled","backgroundTrackId","backgroundVolume","state","activeIndex","setActiveIndex","timeLeft","setTimeLeft","gameOver","setGameOver","score","setScore","gameStarted","setGameStarted","feedback","setFeedback","connectedDevices","deviceValues","intervalRef","cosmosToUse","slice","lastPressRef","isUnmountingRef","previousButtonStates","hasInitializedRef","currentLightingState","playMIDINote","selectedTrack","setVolume","activeDevice","length","device","handleButtonPress","deviceId","console","log","id","s","i","checkButtonStates","hasActiveDevice","activeDeviceId","hasDeviceValue","deviceValue","currentButtonState","buttonState","previousButtonState","current","undefined","wasReleased","isPressed","now","Date","wasPressed","isReleased","interval","setInterval","clearInterval","forEach","idx","r","g","b","setColor","setLuminosity","t","shouldBeLit","luminosity","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","width","height","fill","viewBox","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","String","Math","floor","padStart","cx","cy","x","y","rx","map","isActive","colorInfo","style","boxShadow","background","_c","$RefreshReg$"],"sources":["/Users/abinop/code/CosmoCode/cosmo-web-public/src/components/ExerciseGame.js"],"sourcesContent":["import React, { useEffect, useState, useRef, useMemo, useCallback } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { useWebSocket } from '../contexts/WebSocketContext';\nimport wsService from '../services/WebSocketService';\nimport useMIDISound from '../hooks/useMIDISound';\nimport useBackgroundMusic from '../hooks/useBackgroundMusic';\n\nconst colorMap = [\n  { name: 'blue', rgb: [0, 0, 4], tailwind: 'border-blue-500', bgTailwind: 'bg-blue-500' },\n  { name: 'green', rgb: [0, 4, 0], tailwind: 'border-green-400', bgTailwind: 'bg-green-400' },\n  { name: 'yellow', rgb: [4, 3, 0], tailwind: 'border-yellow-400', bgTailwind: 'bg-yellow-400' },\n  { name: 'orange', rgb: [4, 1, 0], tailwind: 'border-orange-400', bgTailwind: 'bg-orange-400' },\n  { name: 'red', rgb: [4, 0, 0], tailwind: 'border-red-400', bgTailwind: 'bg-red-400' },\n  { name: 'purple', rgb: [4, 0, 4], tailwind: 'border-purple-400', bgTailwind: 'bg-purple-400' },\n];\n\nexport default function ExerciseGame() {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const { numCosmos = 2, duration = 30, soundEnabled = true, backgroundTrackId = 'brassbeat', backgroundVolume = 30 } = location.state || {};\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [timeLeft, setTimeLeft] = useState(duration);\n  const [gameOver, setGameOver] = useState(false);\n  const [score, setScore] = useState(0);\n  const [gameStarted, setGameStarted] = useState(false);\n  const [feedback, setFeedback] = useState(null); // 'correct' or 'incorrect'\n  const { connectedDevices, deviceValues } = useWebSocket();\n  const intervalRef = useRef(null);\n  const cosmosToUse = useMemo(() => connectedDevices.slice(0, numCosmos), [connectedDevices, numCosmos]);\n  const lastPressRef = useRef({});\n  const isUnmountingRef = useRef(false);\n  const previousButtonStates = useRef({});\n  const hasInitializedRef = useRef(false);\n  const currentLightingState = useRef({}); // Track current lighting state to prevent unnecessary updates\n\n  // Initialize MIDI sound system\n  const playMIDINote = useMIDISound(soundEnabled);\n  \n  // Initialize background music system\n  const { selectedTrack, setVolume } = useBackgroundMusic(backgroundTrackId, gameStarted && !gameOver);\n\n  // Set background music volume\n  useEffect(() => {\n    setVolume(backgroundVolume / 100); // Convert percentage to 0-1 range\n  }, [backgroundVolume, setVolume]);\n\n  // Get the active device from cosmosToUse array\n  const activeDevice = useMemo(() => {\n    if (!cosmosToUse.length) return null;\n    const device = cosmosToUse[activeIndex];\n    // console.log(`[ExerciseGame] 🎯 Active device calculated:`, {\n    //   activeIndex,\n    //   totalDevices: cosmosToUse.length,\n    //   activeDevice: device,\n    //   allDevices: cosmosToUse.map(d => ({ id: d.id, name: d.name }))\n    // });\n    return device;\n  }, [cosmosToUse, activeIndex]);\n\n  // Handle button press for the active device\n  const handleButtonPress = useCallback((deviceId) => {\n    // console.log(`[ExerciseGame] 🎯 handleButtonPress called with deviceId: ${deviceId}`);\n    // console.log(`[ExerciseGame] 🎯 activeDevice:`, activeDevice);\n    // console.log(`[ExerciseGame] 🎯 activeIndex: ${activeIndex}, cosmosToUse:`, cosmosToUse.map(d => d.id));\n    \n    // Don't process button presses if game is over\n    if (gameOver) {\n      console.log(`[ExerciseGame] ❌ Button press ignored - game is over`);\n      return;\n    }\n    \n    if (!activeDevice || deviceId !== activeDevice.id) {\n      console.log(`[ExerciseGame] ❌ Button press ignored - deviceId mismatch or no active device`);\n      console.log(`[ExerciseGame] ❌ Expected: ${activeDevice?.id}, Got: ${deviceId}`);\n      return;\n    }\n    console.log(`[ExerciseGame] ✅ Correct button press! Score: ${score + 1}, Moving from index ${activeIndex} to ${(activeIndex + 1) % cosmosToUse.length}`);\n    \n    // Play MIDI note based on the current active index\n    playMIDINote(activeIndex, 100, 0.3);\n    \n    setScore(s => s + 1);\n    setActiveIndex(i => (i + 1) % cosmosToUse.length);\n  }, [activeDevice, cosmosToUse, score, activeIndex, playMIDINote, gameOver]);\n\n  const checkButtonStates = useCallback(() => {\n    // Don't check button states if game is over\n    if (gameOver) {\n      return;\n    }\n    \n    if (!gameStarted || !activeDevice || !deviceValues[activeDevice.id]) {\n      console.log(`[ExerciseGame] 🔍 checkButtonStates skipped:`, {\n        gameStarted,\n        hasActiveDevice: !!activeDevice,\n        activeDeviceId: activeDevice?.id,\n        hasDeviceValue: !!deviceValues[activeDevice?.id]\n      });\n      return;\n    }\n    const deviceValue = deviceValues[activeDevice.id];\n    const currentButtonState = deviceValue.buttonState;\n    const previousButtonState = previousButtonStates.current[activeDevice.id];\n    \n    // Ensure previousButtonState is initialized\n    if (previousButtonState === undefined) {\n      previousButtonStates.current[activeDevice.id] = currentButtonState;\n      console.log(`[ExerciseGame] 🔍 Initialized previousButtonState for ${activeDevice.id} to ${currentButtonState}`);\n      return;\n    }\n    \n    const wasReleased = previousButtonState === 0;\n    const isPressed = currentButtonState === 1;\n    \n    // console.log('[ExerciseGame] 🔍 Checking button states:', {\n    //   deviceId: activeDevice.id,\n    //   currentButtonState,\n    //   previousButtonState,\n    //   wasReleased,\n    //   isPressed,\n    //   gameStarted,\n    //   hasDeviceValue: !!deviceValues[activeDevice.id],\n    //   timestamp: new Date().toISOString()\n    // });\n    \n    if (wasReleased && isPressed) {\n      const now = Date.now();\n      if (!lastPressRef.current[activeDevice.id] || now - lastPressRef.current[activeDevice.id] > 500) {\n        lastPressRef.current[activeDevice.id] = now;\n        console.log(`[ExerciseGame] 🎯 Button pressed on device ${activeDevice.id} - calling handleButtonPress`);\n        handleButtonPress(activeDevice.id);\n      } else {\n        console.log(`[ExerciseGame] ⏰ Button press ignored due to debouncing (${now - lastPressRef.current[activeDevice.id]}ms since last press)`);\n      }\n    }\n    \n    const wasPressed = previousButtonState === 1;\n    const isReleased = currentButtonState === 0;\n    if (wasPressed && isReleased) {\n      console.log(`[ExerciseGame] 🔄 Button released on device ${activeDevice.id}`);\n      // Don't set luminosity here - let the activeIndex effect handle it\n    }\n    \n    // Update previous state\n    previousButtonStates.current[activeDevice.id] = currentButtonState;\n  }, [gameStarted, activeDevice, deviceValues, handleButtonPress, gameOver]);\n\n  // Check button states immediately when device values change\n  useEffect(() => {\n    if (gameStarted && !gameOver && activeDevice && deviceValues[activeDevice.id]) {\n      checkButtonStates();\n    }\n  }, [deviceValues, gameStarted, activeDevice, checkButtonStates, gameOver]);\n\n  useEffect(() => {\n    if (gameOver) return;\n    const interval = setInterval(() => {\n      if (!activeDevice) return;\n      checkButtonStates();\n    }, 250);\n    intervalRef.current = interval;\n    return () => clearInterval(interval);\n  }, [gameOver, checkButtonStates, activeDevice]);\n\n  useEffect(() => {\n    return () => {\n      if (!isUnmountingRef.current) {\n        isUnmountingRef.current = true;\n        cosmosToUse.forEach((device, idx) => {\n          // wsService.setMode(device.id, 4);\n          const [r, g, b] = colorMap[idx % colorMap.length].rgb;\n          wsService.setColor(device.id, r, g, b);\n          wsService.setLuminosity(device.id, 0);\n        });\n      }\n    };\n  }, []);\n\n  useEffect(() => {\n    if (!numCosmos || !duration) {\n      navigate('/exercise-settings');\n    }\n  }, [numCosmos, duration, navigate]);\n\n  useEffect(() => {\n    if (gameOver) return;\n    \n    // Don't start countdown timer if duration is infinite (-1)\n    if (duration === -1) return;\n    \n    intervalRef.current = setInterval(() => {\n      setTimeLeft(t => {\n        if (t <= 1) {\n          clearInterval(intervalRef.current);\n          setGameOver(true);\n          return 0;\n        }\n        return t - 1;\n      });\n    }, 1000);\n    return () => clearInterval(intervalRef.current);\n  }, [gameOver, duration]);\n\n  useEffect(() => {\n    if (cosmosToUse.length > 0 && !hasInitializedRef.current) {\n      hasInitializedRef.current = true;\n      console.log(`[ExerciseGame] 🎮 Initializing ${cosmosToUse.length} devices`);\n      cosmosToUse.forEach((device, idx) => {\n        // Set mode, color, and luminosity for each device\n        console.log(`[ExerciseGame] 🎮 Setting up device ${device.id} (index ${idx}) - Color: ${colorMap[idx % colorMap.length].name}, Luminosity: 0`);\n        const [r, g, b] = colorMap[idx % colorMap.length].rgb;\n        wsService.setColor(device.id, r, g, b);\n        wsService.setLuminosity(device.id, 0); // Start with zero luminosity\n        currentLightingState.current[device.id] = 0; // Initialize lighting state tracking\n        \n        // Initialize button state immediately if available\n        if (deviceValues[device.id]) {\n          previousButtonStates.current[device.id] = deviceValues[device.id].buttonState;\n          console.log(`[ExerciseGame] 🎮 Initial button state for ${device.id}: ${deviceValues[device.id].buttonState}`);\n        } else {\n          // Initialize to released state if no device value available\n          previousButtonStates.current[device.id] = 0;\n          console.log(`[ExerciseGame] 🎮 Initialized button state for ${device.id} to 0 (released)`);\n        }\n      });\n      \n      // Start the game immediately\n      console.log(`[ExerciseGame] 🎮 Game starting immediately`);\n      setGameStarted(true);\n    }\n  }, [cosmosToUse, deviceValues]); // Added deviceValues dependency to ensure proper initialization\n\n  // Light up only the active device\n  useEffect(() => {\n    if (gameStarted && cosmosToUse.length > 0) {\n      // If game is over, turn off all devices\n      if (gameOver) {\n        console.log(`[ExerciseGame] 💡 Game over - turning off all devices`);\n        cosmosToUse.forEach((device, idx) => {\n          if (currentLightingState.current[device.id] !== 0) {\n            console.log(`[ExerciseGame] 💡 Turning off device ${device.id} (index ${idx})`);\n            wsService.setLuminosity(device.id, 0);\n            currentLightingState.current[device.id] = 0;\n          }\n        });\n        return;\n      }\n      \n      console.log(`[ExerciseGame] 💡 Setting device lighting - Active index: ${activeIndex}, Total devices: ${cosmosToUse.length}`);\n      cosmosToUse.forEach((device, idx) => {\n        const shouldBeLit = idx === activeIndex;\n        const luminosity = shouldBeLit ? 64 : 0;\n        \n        // Only update if the lighting state has actually changed\n        if (currentLightingState.current[device.id] !== luminosity) {\n          console.log(`[ExerciseGame] 💡 ${shouldBeLit ? 'Lighting up' : 'Turning off'} device ${device.id} (index ${idx}) to luminosity ${luminosity}`);\n          wsService.setLuminosity(device.id, luminosity);\n          currentLightingState.current[device.id] = luminosity;\n        } else {\n          console.log(`[ExerciseGame] 💡 Skipping luminosity update for device ${device.id} - already at ${luminosity}`);\n        }\n      });\n    }\n  }, [activeIndex, gameStarted, gameOver]); // Added gameOver dependency\n\n  // --- UI ---\n  if (gameOver) {\n    return (\n      <div className=\"flex flex-col items-center justify-center min-h-screen bg-white\">\n        <div className=\"bg-white p-8 rounded shadow-md w-full max-w-md text-center\">\n          <h1 className=\"text-3xl font-bold mb-4\">Game Over!</h1>\n          <p className=\"text-xl mb-2\">Score: {score}</p>\n          <button\n            onClick={() => navigate('/exercise-settings')}\n            className=\"mt-4 bg-purple-600 text-white py-2 px-4 rounded-full hover:bg-purple-700 font-semibold\"\n          >\n            Back to Settings\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen flex flex-col bg-white\">\n      {/* Top Bar */}\n      <div className=\"flex items-center justify-between px-6 pt-4 pb-2\">\n        <button\n          onClick={() => navigate('/exercise-settings')}\n          className=\"rounded-full border-2 border-purple-400 text-purple-600 p-2 hover:bg-purple-50 transition\"\n          aria-label=\"Back\"\n        >\n          <svg width=\"28\" height=\"28\" fill=\"none\" viewBox=\"0 0 24 24\"><path stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15 19l-7-7 7-7\"/></svg>\n        </button>\n        <div className=\"flex-1 flex flex-col items-center\">\n          <div className=\"flex items-center gap-2 mb-1\">\n            <span className=\"text-xl\">⏳</span>\n            <span className=\"text-lg font-semibold\">\n              {duration === -1 ? '∞' : `${String(Math.floor(timeLeft/60)).padStart(2,'0')}:${String(timeLeft%60).padStart(2,'0')}`}\n            </span>\n          </div>\n          <div className=\"mt-1\">\n            <span className=\"inline-flex items-center px-4 py-1 rounded-full bg-purple-100 text-purple-700 font-semibold text-base\">\n              <span className=\"mr-2 text-xl\">🎵</span> {selectedTrack.name}\n            </span>\n          </div>\n          <div className=\"mt-2\">\n            <span className=\"inline-flex items-center px-4 py-1 rounded-full bg-green-100 text-green-700 font-semibold text-base\">\n              <span className=\"mr-2 text-xl\">🏆</span> Score: {score}\n            </span>\n          </div>\n        </div>\n        <button\n          onClick={() => navigate('/exercise-settings')}\n          className=\"rounded-full border-2 border-gray-300 text-gray-600 p-2 hover:bg-gray-100 transition ml-2\"\n          aria-label=\"End Game\"\n        >\n          <svg width=\"28\" height=\"28\" fill=\"none\" viewBox=\"0 0 24 24\"><circle cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"2\"/><rect x=\"9\" y=\"9\" width=\"6\" height=\"6\" rx=\"1\" fill=\"currentColor\"/></svg>\n        </button>\n      </div>\n      {/* Game Area */}\n      <div className=\"flex-1 flex flex-col items-center justify-center\">\n        <div className=\"flex flex-row items-center justify-center gap-12 mt-8\">\n          {cosmosToUse.map((device, idx) => {\n            const isActive = idx === activeIndex;\n            const colorInfo = colorMap[idx % colorMap.length];\n            return (\n              <div\n                key={device.id}\n                className={`flex items-center justify-center rounded-full border-4 transition-all duration-200 ${\n                  isActive \n                    ? `${colorInfo.bgTailwind} border-white` \n                    : `${colorInfo.tailwind} bg-white`\n                }`}\n                style={{\n                  width: 180,\n                  height: 180,\n                  boxShadow: isActive ? '0 0 20px rgba(0, 0, 0, 0.3)' : 'none',\n                }}\n              >\n                {/* Optional: Add a subtle inner glow for active circles */}\n                {isActive && (\n                  <div \n                    className=\"w-full h-full rounded-full opacity-20\"\n                    style={{ \n                      background: 'radial-gradient(circle, rgba(255,255,255,0.3) 0%, transparent 70%)'\n                    }} \n                  />\n                )}\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n} "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,EAAEC,OAAO,EAAEC,WAAW,QAAQ,OAAO;AAChF,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAC3D,SAASC,YAAY,QAAQ,8BAA8B;AAC3D,OAAOC,SAAS,MAAM,8BAA8B;AACpD,OAAOC,YAAY,MAAM,uBAAuB;AAChD,OAAOC,kBAAkB,MAAM,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7D,MAAMC,QAAQ,GAAG,CACf;EAAEC,IAAI,EAAE,MAAM;EAAEC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAAEC,QAAQ,EAAE,iBAAiB;EAAEC,UAAU,EAAE;AAAc,CAAC,EACxF;EAAEH,IAAI,EAAE,OAAO;EAAEC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAAEC,QAAQ,EAAE,kBAAkB;EAAEC,UAAU,EAAE;AAAe,CAAC,EAC3F;EAAEH,IAAI,EAAE,QAAQ;EAAEC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAAEC,QAAQ,EAAE,mBAAmB;EAAEC,UAAU,EAAE;AAAgB,CAAC,EAC9F;EAAEH,IAAI,EAAE,QAAQ;EAAEC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAAEC,QAAQ,EAAE,mBAAmB;EAAEC,UAAU,EAAE;AAAgB,CAAC,EAC9F;EAAEH,IAAI,EAAE,KAAK;EAAEC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAAEC,QAAQ,EAAE,gBAAgB;EAAEC,UAAU,EAAE;AAAa,CAAC,EACrF;EAAEH,IAAI,EAAE,QAAQ;EAAEC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAAEC,QAAQ,EAAE,mBAAmB;EAAEC,UAAU,EAAE;AAAgB,CAAC,CAC/F;AAED,eAAe,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACrC,MAAMC,QAAQ,GAAGf,WAAW,CAAC,CAAC;EAC9B,MAAMgB,QAAQ,GAAGf,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEgB,SAAS,GAAG,CAAC;IAAEC,QAAQ,GAAG,EAAE;IAAEC,YAAY,GAAG,IAAI;IAAEC,iBAAiB,GAAG,WAAW;IAAEC,gBAAgB,GAAG;EAAG,CAAC,GAAGN,QAAQ,CAACO,KAAK,IAAI,CAAC,CAAC;EAC1I,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAG5B,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAAC6B,QAAQ,EAAEC,WAAW,CAAC,GAAG9B,QAAQ,CAACsB,QAAQ,CAAC;EAClD,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGhC,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACiC,KAAK,EAAEC,QAAQ,CAAC,GAAGlC,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACmC,WAAW,EAAEC,cAAc,CAAC,GAAGpC,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACqC,QAAQ,EAAEC,WAAW,CAAC,GAAGtC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAChD,MAAM;IAAEuC,gBAAgB;IAAEC;EAAa,CAAC,GAAGlC,YAAY,CAAC,CAAC;EACzD,MAAMmC,WAAW,GAAGxC,MAAM,CAAC,IAAI,CAAC;EAChC,MAAMyC,WAAW,GAAGxC,OAAO,CAAC,MAAMqC,gBAAgB,CAACI,KAAK,CAAC,CAAC,EAAEtB,SAAS,CAAC,EAAE,CAACkB,gBAAgB,EAAElB,SAAS,CAAC,CAAC;EACtG,MAAMuB,YAAY,GAAG3C,MAAM,CAAC,CAAC,CAAC,CAAC;EAC/B,MAAM4C,eAAe,GAAG5C,MAAM,CAAC,KAAK,CAAC;EACrC,MAAM6C,oBAAoB,GAAG7C,MAAM,CAAC,CAAC,CAAC,CAAC;EACvC,MAAM8C,iBAAiB,GAAG9C,MAAM,CAAC,KAAK,CAAC;EACvC,MAAM+C,oBAAoB,GAAG/C,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;EAEzC;EACA,MAAMgD,YAAY,GAAGzC,YAAY,CAACe,YAAY,CAAC;;EAE/C;EACA,MAAM;IAAE2B,aAAa;IAAEC;EAAU,CAAC,GAAG1C,kBAAkB,CAACe,iBAAiB,EAAEW,WAAW,IAAI,CAACJ,QAAQ,CAAC;;EAEpG;EACAhC,SAAS,CAAC,MAAM;IACdoD,SAAS,CAAC1B,gBAAgB,GAAG,GAAG,CAAC,CAAC,CAAC;EACrC,CAAC,EAAE,CAACA,gBAAgB,EAAE0B,SAAS,CAAC,CAAC;;EAEjC;EACA,MAAMC,YAAY,GAAGlD,OAAO,CAAC,MAAM;IACjC,IAAI,CAACwC,WAAW,CAACW,MAAM,EAAE,OAAO,IAAI;IACpC,MAAMC,MAAM,GAAGZ,WAAW,CAACf,WAAW,CAAC;IACvC;IACA;IACA;IACA;IACA;IACA;IACA,OAAO2B,MAAM;EACf,CAAC,EAAE,CAACZ,WAAW,EAAEf,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAM4B,iBAAiB,GAAGpD,WAAW,CAAEqD,QAAQ,IAAK;IAClD;IACA;IACA;;IAEA;IACA,IAAIzB,QAAQ,EAAE;MACZ0B,OAAO,CAACC,GAAG,CAAE,sDAAqD,CAAC;MACnE;IACF;IAEA,IAAI,CAACN,YAAY,IAAII,QAAQ,KAAKJ,YAAY,CAACO,EAAE,EAAE;MACjDF,OAAO,CAACC,GAAG,CAAE,+EAA8E,CAAC;MAC5FD,OAAO,CAACC,GAAG,CAAE,8BAA6BN,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEO,EAAG,UAASH,QAAS,EAAC,CAAC;MAC/E;IACF;IACAC,OAAO,CAACC,GAAG,CAAE,iDAAgDzB,KAAK,GAAG,CAAE,uBAAsBN,WAAY,OAAM,CAACA,WAAW,GAAG,CAAC,IAAIe,WAAW,CAACW,MAAO,EAAC,CAAC;;IAExJ;IACAJ,YAAY,CAACtB,WAAW,EAAE,GAAG,EAAE,GAAG,CAAC;IAEnCO,QAAQ,CAAC0B,CAAC,IAAIA,CAAC,GAAG,CAAC,CAAC;IACpBhC,cAAc,CAACiC,CAAC,IAAI,CAACA,CAAC,GAAG,CAAC,IAAInB,WAAW,CAACW,MAAM,CAAC;EACnD,CAAC,EAAE,CAACD,YAAY,EAAEV,WAAW,EAAET,KAAK,EAAEN,WAAW,EAAEsB,YAAY,EAAElB,QAAQ,CAAC,CAAC;EAE3E,MAAM+B,iBAAiB,GAAG3D,WAAW,CAAC,MAAM;IAC1C;IACA,IAAI4B,QAAQ,EAAE;MACZ;IACF;IAEA,IAAI,CAACI,WAAW,IAAI,CAACiB,YAAY,IAAI,CAACZ,YAAY,CAACY,YAAY,CAACO,EAAE,CAAC,EAAE;MACnEF,OAAO,CAACC,GAAG,CAAE,8CAA6C,EAAE;QAC1DvB,WAAW;QACX4B,eAAe,EAAE,CAAC,CAACX,YAAY;QAC/BY,cAAc,EAAEZ,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEO,EAAE;QAChCM,cAAc,EAAE,CAAC,CAACzB,YAAY,CAACY,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEO,EAAE;MACjD,CAAC,CAAC;MACF;IACF;IACA,MAAMO,WAAW,GAAG1B,YAAY,CAACY,YAAY,CAACO,EAAE,CAAC;IACjD,MAAMQ,kBAAkB,GAAGD,WAAW,CAACE,WAAW;IAClD,MAAMC,mBAAmB,GAAGvB,oBAAoB,CAACwB,OAAO,CAAClB,YAAY,CAACO,EAAE,CAAC;;IAEzE;IACA,IAAIU,mBAAmB,KAAKE,SAAS,EAAE;MACrCzB,oBAAoB,CAACwB,OAAO,CAAClB,YAAY,CAACO,EAAE,CAAC,GAAGQ,kBAAkB;MAClEV,OAAO,CAACC,GAAG,CAAE,yDAAwDN,YAAY,CAACO,EAAG,OAAMQ,kBAAmB,EAAC,CAAC;MAChH;IACF;IAEA,MAAMK,WAAW,GAAGH,mBAAmB,KAAK,CAAC;IAC7C,MAAMI,SAAS,GAAGN,kBAAkB,KAAK,CAAC;;IAE1C;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA,IAAIK,WAAW,IAAIC,SAAS,EAAE;MAC5B,MAAMC,GAAG,GAAGC,IAAI,CAACD,GAAG,CAAC,CAAC;MACtB,IAAI,CAAC9B,YAAY,CAAC0B,OAAO,CAAClB,YAAY,CAACO,EAAE,CAAC,IAAIe,GAAG,GAAG9B,YAAY,CAAC0B,OAAO,CAAClB,YAAY,CAACO,EAAE,CAAC,GAAG,GAAG,EAAE;QAC/Ff,YAAY,CAAC0B,OAAO,CAAClB,YAAY,CAACO,EAAE,CAAC,GAAGe,GAAG;QAC3CjB,OAAO,CAACC,GAAG,CAAE,8CAA6CN,YAAY,CAACO,EAAG,8BAA6B,CAAC;QACxGJ,iBAAiB,CAACH,YAAY,CAACO,EAAE,CAAC;MACpC,CAAC,MAAM;QACLF,OAAO,CAACC,GAAG,CAAE,4DAA2DgB,GAAG,GAAG9B,YAAY,CAAC0B,OAAO,CAAClB,YAAY,CAACO,EAAE,CAAE,sBAAqB,CAAC;MAC5I;IACF;IAEA,MAAMiB,UAAU,GAAGP,mBAAmB,KAAK,CAAC;IAC5C,MAAMQ,UAAU,GAAGV,kBAAkB,KAAK,CAAC;IAC3C,IAAIS,UAAU,IAAIC,UAAU,EAAE;MAC5BpB,OAAO,CAACC,GAAG,CAAE,+CAA8CN,YAAY,CAACO,EAAG,EAAC,CAAC;MAC7E;IACF;;IAEA;IACAb,oBAAoB,CAACwB,OAAO,CAAClB,YAAY,CAACO,EAAE,CAAC,GAAGQ,kBAAkB;EACpE,CAAC,EAAE,CAAChC,WAAW,EAAEiB,YAAY,EAAEZ,YAAY,EAAEe,iBAAiB,EAAExB,QAAQ,CAAC,CAAC;;EAE1E;EACAhC,SAAS,CAAC,MAAM;IACd,IAAIoC,WAAW,IAAI,CAACJ,QAAQ,IAAIqB,YAAY,IAAIZ,YAAY,CAACY,YAAY,CAACO,EAAE,CAAC,EAAE;MAC7EG,iBAAiB,CAAC,CAAC;IACrB;EACF,CAAC,EAAE,CAACtB,YAAY,EAAEL,WAAW,EAAEiB,YAAY,EAAEU,iBAAiB,EAAE/B,QAAQ,CAAC,CAAC;EAE1EhC,SAAS,CAAC,MAAM;IACd,IAAIgC,QAAQ,EAAE;IACd,MAAM+C,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjC,IAAI,CAAC3B,YAAY,EAAE;MACnBU,iBAAiB,CAAC,CAAC;IACrB,CAAC,EAAE,GAAG,CAAC;IACPrB,WAAW,CAAC6B,OAAO,GAAGQ,QAAQ;IAC9B,OAAO,MAAME,aAAa,CAACF,QAAQ,CAAC;EACtC,CAAC,EAAE,CAAC/C,QAAQ,EAAE+B,iBAAiB,EAAEV,YAAY,CAAC,CAAC;EAE/CrD,SAAS,CAAC,MAAM;IACd,OAAO,MAAM;MACX,IAAI,CAAC8C,eAAe,CAACyB,OAAO,EAAE;QAC5BzB,eAAe,CAACyB,OAAO,GAAG,IAAI;QAC9B5B,WAAW,CAACuC,OAAO,CAAC,CAAC3B,MAAM,EAAE4B,GAAG,KAAK;UACnC;UACA,MAAM,CAACC,CAAC,EAAEC,CAAC,EAAEC,CAAC,CAAC,GAAGzE,QAAQ,CAACsE,GAAG,GAAGtE,QAAQ,CAACyC,MAAM,CAAC,CAACvC,GAAG;UACrDP,SAAS,CAAC+E,QAAQ,CAAChC,MAAM,CAACK,EAAE,EAAEwB,CAAC,EAAEC,CAAC,EAAEC,CAAC,CAAC;UACtC9E,SAAS,CAACgF,aAAa,CAACjC,MAAM,CAACK,EAAE,EAAE,CAAC,CAAC;QACvC,CAAC,CAAC;MACJ;IACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN5D,SAAS,CAAC,MAAM;IACd,IAAI,CAACsB,SAAS,IAAI,CAACC,QAAQ,EAAE;MAC3BF,QAAQ,CAAC,oBAAoB,CAAC;IAChC;EACF,CAAC,EAAE,CAACC,SAAS,EAAEC,QAAQ,EAAEF,QAAQ,CAAC,CAAC;EAEnCrB,SAAS,CAAC,MAAM;IACd,IAAIgC,QAAQ,EAAE;;IAEd;IACA,IAAIT,QAAQ,KAAK,CAAC,CAAC,EAAE;IAErBmB,WAAW,CAAC6B,OAAO,GAAGS,WAAW,CAAC,MAAM;MACtCjD,WAAW,CAAC0D,CAAC,IAAI;QACf,IAAIA,CAAC,IAAI,CAAC,EAAE;UACVR,aAAa,CAACvC,WAAW,CAAC6B,OAAO,CAAC;UAClCtC,WAAW,CAAC,IAAI,CAAC;UACjB,OAAO,CAAC;QACV;QACA,OAAOwD,CAAC,GAAG,CAAC;MACd,CAAC,CAAC;IACJ,CAAC,EAAE,IAAI,CAAC;IACR,OAAO,MAAMR,aAAa,CAACvC,WAAW,CAAC6B,OAAO,CAAC;EACjD,CAAC,EAAE,CAACvC,QAAQ,EAAET,QAAQ,CAAC,CAAC;EAExBvB,SAAS,CAAC,MAAM;IACd,IAAI2C,WAAW,CAACW,MAAM,GAAG,CAAC,IAAI,CAACN,iBAAiB,CAACuB,OAAO,EAAE;MACxDvB,iBAAiB,CAACuB,OAAO,GAAG,IAAI;MAChCb,OAAO,CAACC,GAAG,CAAE,kCAAiChB,WAAW,CAACW,MAAO,UAAS,CAAC;MAC3EX,WAAW,CAACuC,OAAO,CAAC,CAAC3B,MAAM,EAAE4B,GAAG,KAAK;QACnC;QACAzB,OAAO,CAACC,GAAG,CAAE,uCAAsCJ,MAAM,CAACK,EAAG,WAAUuB,GAAI,cAAatE,QAAQ,CAACsE,GAAG,GAAGtE,QAAQ,CAACyC,MAAM,CAAC,CAACxC,IAAK,iBAAgB,CAAC;QAC9I,MAAM,CAACsE,CAAC,EAAEC,CAAC,EAAEC,CAAC,CAAC,GAAGzE,QAAQ,CAACsE,GAAG,GAAGtE,QAAQ,CAACyC,MAAM,CAAC,CAACvC,GAAG;QACrDP,SAAS,CAAC+E,QAAQ,CAAChC,MAAM,CAACK,EAAE,EAAEwB,CAAC,EAAEC,CAAC,EAAEC,CAAC,CAAC;QACtC9E,SAAS,CAACgF,aAAa,CAACjC,MAAM,CAACK,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;QACvCX,oBAAoB,CAACsB,OAAO,CAAChB,MAAM,CAACK,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;;QAE7C;QACA,IAAInB,YAAY,CAACc,MAAM,CAACK,EAAE,CAAC,EAAE;UAC3Bb,oBAAoB,CAACwB,OAAO,CAAChB,MAAM,CAACK,EAAE,CAAC,GAAGnB,YAAY,CAACc,MAAM,CAACK,EAAE,CAAC,CAACS,WAAW;UAC7EX,OAAO,CAACC,GAAG,CAAE,8CAA6CJ,MAAM,CAACK,EAAG,KAAInB,YAAY,CAACc,MAAM,CAACK,EAAE,CAAC,CAACS,WAAY,EAAC,CAAC;QAChH,CAAC,MAAM;UACL;UACAtB,oBAAoB,CAACwB,OAAO,CAAChB,MAAM,CAACK,EAAE,CAAC,GAAG,CAAC;UAC3CF,OAAO,CAACC,GAAG,CAAE,kDAAiDJ,MAAM,CAACK,EAAG,kBAAiB,CAAC;QAC5F;MACF,CAAC,CAAC;;MAEF;MACAF,OAAO,CAACC,GAAG,CAAE,6CAA4C,CAAC;MAC1DtB,cAAc,CAAC,IAAI,CAAC;IACtB;EACF,CAAC,EAAE,CAACM,WAAW,EAAEF,YAAY,CAAC,CAAC,CAAC,CAAC;;EAEjC;EACAzC,SAAS,CAAC,MAAM;IACd,IAAIoC,WAAW,IAAIO,WAAW,CAACW,MAAM,GAAG,CAAC,EAAE;MACzC;MACA,IAAItB,QAAQ,EAAE;QACZ0B,OAAO,CAACC,GAAG,CAAE,uDAAsD,CAAC;QACpEhB,WAAW,CAACuC,OAAO,CAAC,CAAC3B,MAAM,EAAE4B,GAAG,KAAK;UACnC,IAAIlC,oBAAoB,CAACsB,OAAO,CAAChB,MAAM,CAACK,EAAE,CAAC,KAAK,CAAC,EAAE;YACjDF,OAAO,CAACC,GAAG,CAAE,wCAAuCJ,MAAM,CAACK,EAAG,WAAUuB,GAAI,GAAE,CAAC;YAC/E3E,SAAS,CAACgF,aAAa,CAACjC,MAAM,CAACK,EAAE,EAAE,CAAC,CAAC;YACrCX,oBAAoB,CAACsB,OAAO,CAAChB,MAAM,CAACK,EAAE,CAAC,GAAG,CAAC;UAC7C;QACF,CAAC,CAAC;QACF;MACF;MAEAF,OAAO,CAACC,GAAG,CAAE,6DAA4D/B,WAAY,oBAAmBe,WAAW,CAACW,MAAO,EAAC,CAAC;MAC7HX,WAAW,CAACuC,OAAO,CAAC,CAAC3B,MAAM,EAAE4B,GAAG,KAAK;QACnC,MAAMO,WAAW,GAAGP,GAAG,KAAKvD,WAAW;QACvC,MAAM+D,UAAU,GAAGD,WAAW,GAAG,EAAE,GAAG,CAAC;;QAEvC;QACA,IAAIzC,oBAAoB,CAACsB,OAAO,CAAChB,MAAM,CAACK,EAAE,CAAC,KAAK+B,UAAU,EAAE;UAC1DjC,OAAO,CAACC,GAAG,CAAE,qBAAoB+B,WAAW,GAAG,aAAa,GAAG,aAAc,WAAUnC,MAAM,CAACK,EAAG,WAAUuB,GAAI,mBAAkBQ,UAAW,EAAC,CAAC;UAC9InF,SAAS,CAACgF,aAAa,CAACjC,MAAM,CAACK,EAAE,EAAE+B,UAAU,CAAC;UAC9C1C,oBAAoB,CAACsB,OAAO,CAAChB,MAAM,CAACK,EAAE,CAAC,GAAG+B,UAAU;QACtD,CAAC,MAAM;UACLjC,OAAO,CAACC,GAAG,CAAE,2DAA0DJ,MAAM,CAACK,EAAG,iBAAgB+B,UAAW,EAAC,CAAC;QAChH;MACF,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,CAAC/D,WAAW,EAAEQ,WAAW,EAAEJ,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAE1C;EACA,IAAIA,QAAQ,EAAE;IACZ,oBACEpB,OAAA;MAAKgF,SAAS,EAAC,iEAAiE;MAAAC,QAAA,eAC9EjF,OAAA;QAAKgF,SAAS,EAAC,4DAA4D;QAAAC,QAAA,gBACzEjF,OAAA;UAAIgF,SAAS,EAAC,yBAAyB;UAAAC,QAAA,EAAC;QAAU;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACvDrF,OAAA;UAAGgF,SAAS,EAAC,cAAc;UAAAC,QAAA,GAAC,SAAO,EAAC3D,KAAK;QAAA;UAAA4D,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC9CrF,OAAA;UACEsF,OAAO,EAAEA,CAAA,KAAM7E,QAAQ,CAAC,oBAAoB,CAAE;UAC9CuE,SAAS,EAAC,wFAAwF;UAAAC,QAAA,EACnG;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV;EAEA,oBACErF,OAAA;IAAKgF,SAAS,EAAC,qCAAqC;IAAAC,QAAA,gBAElDjF,OAAA;MAAKgF,SAAS,EAAC,kDAAkD;MAAAC,QAAA,gBAC/DjF,OAAA;QACEsF,OAAO,EAAEA,CAAA,KAAM7E,QAAQ,CAAC,oBAAoB,CAAE;QAC9CuE,SAAS,EAAC,2FAA2F;QACrG,cAAW,MAAM;QAAAC,QAAA,eAEjBjF,OAAA;UAAKuF,KAAK,EAAC,IAAI;UAACC,MAAM,EAAC,IAAI;UAACC,IAAI,EAAC,MAAM;UAACC,OAAO,EAAC,WAAW;UAAAT,QAAA,eAACjF,OAAA;YAAM2F,MAAM,EAAC,cAAc;YAACC,WAAW,EAAC,GAAG;YAACC,aAAa,EAAC,OAAO;YAACC,cAAc,EAAC,OAAO;YAACC,CAAC,EAAC;UAAiB;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1K,CAAC,eACTrF,OAAA;QAAKgF,SAAS,EAAC,mCAAmC;QAAAC,QAAA,gBAChDjF,OAAA;UAAKgF,SAAS,EAAC,8BAA8B;UAAAC,QAAA,gBAC3CjF,OAAA;YAAMgF,SAAS,EAAC,SAAS;YAAAC,QAAA,EAAC;UAAC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAClCrF,OAAA;YAAMgF,SAAS,EAAC,uBAAuB;YAAAC,QAAA,EACpCtE,QAAQ,KAAK,CAAC,CAAC,GAAG,GAAG,GAAI,GAAEqF,MAAM,CAACC,IAAI,CAACC,KAAK,CAAChF,QAAQ,GAAC,EAAE,CAAC,CAAC,CAACiF,QAAQ,CAAC,CAAC,EAAC,GAAG,CAAE,IAAGH,MAAM,CAAC9E,QAAQ,GAAC,EAAE,CAAC,CAACiF,QAAQ,CAAC,CAAC,EAAC,GAAG,CAAE;UAAC;YAAAjB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChH,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC,eACNrF,OAAA;UAAKgF,SAAS,EAAC,MAAM;UAAAC,QAAA,eACnBjF,OAAA;YAAMgF,SAAS,EAAC,uGAAuG;YAAAC,QAAA,gBACrHjF,OAAA;cAAMgF,SAAS,EAAC,cAAc;cAAAC,QAAA,EAAC;YAAE;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,KAAC,EAAC9C,aAAa,CAACrC,IAAI;UAAA;YAAAgF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxD;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC,eACNrF,OAAA;UAAKgF,SAAS,EAAC,MAAM;UAAAC,QAAA,eACnBjF,OAAA;YAAMgF,SAAS,EAAC,qGAAqG;YAAAC,QAAA,gBACnHjF,OAAA;cAAMgF,SAAS,EAAC,cAAc;cAAAC,QAAA,EAAC;YAAE;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,YAAQ,EAAC/D,KAAK;UAAA;YAAA4D,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClD;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACNrF,OAAA;QACEsF,OAAO,EAAEA,CAAA,KAAM7E,QAAQ,CAAC,oBAAoB,CAAE;QAC9CuE,SAAS,EAAC,2FAA2F;QACrG,cAAW,UAAU;QAAAC,QAAA,eAErBjF,OAAA;UAAKuF,KAAK,EAAC,IAAI;UAACC,MAAM,EAAC,IAAI;UAACC,IAAI,EAAC,MAAM;UAACC,OAAO,EAAC,WAAW;UAAAT,QAAA,gBAACjF,OAAA;YAAQoG,EAAE,EAAC,IAAI;YAACC,EAAE,EAAC,IAAI;YAAC7B,CAAC,EAAC,IAAI;YAACmB,MAAM,EAAC,cAAc;YAACC,WAAW,EAAC;UAAG;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC,CAAC,eAAArF,OAAA;YAAMsG,CAAC,EAAC,GAAG;YAACC,CAAC,EAAC,GAAG;YAAChB,KAAK,EAAC,GAAG;YAACC,MAAM,EAAC,GAAG;YAACgB,EAAE,EAAC,GAAG;YAACf,IAAI,EAAC;UAAc;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAENrF,OAAA;MAAKgF,SAAS,EAAC,kDAAkD;MAAAC,QAAA,eAC/DjF,OAAA;QAAKgF,SAAS,EAAC,uDAAuD;QAAAC,QAAA,EACnElD,WAAW,CAAC0E,GAAG,CAAC,CAAC9D,MAAM,EAAE4B,GAAG,KAAK;UAChC,MAAMmC,QAAQ,GAAGnC,GAAG,KAAKvD,WAAW;UACpC,MAAM2F,SAAS,GAAG1G,QAAQ,CAACsE,GAAG,GAAGtE,QAAQ,CAACyC,MAAM,CAAC;UACjD,oBACE1C,OAAA;YAEEgF,SAAS,EAAG,sFACV0B,QAAQ,GACH,GAAEC,SAAS,CAACtG,UAAW,eAAc,GACrC,GAAEsG,SAAS,CAACvG,QAAS,WAC3B,EAAE;YACHwG,KAAK,EAAE;cACLrB,KAAK,EAAE,GAAG;cACVC,MAAM,EAAE,GAAG;cACXqB,SAAS,EAAEH,QAAQ,GAAG,6BAA6B,GAAG;YACxD,CAAE;YAAAzB,QAAA,EAGDyB,QAAQ,iBACP1G,OAAA;cACEgF,SAAS,EAAC,uCAAuC;cACjD4B,KAAK,EAAE;gBACLE,UAAU,EAAE;cACd;YAAE;cAAA5B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH;UACF,GApBI1C,MAAM,CAACK,EAAE;YAAAkC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAqBX,CAAC;QAEV,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC9E,EAAA,CApVuBD,YAAY;EAAA,QACjBb,WAAW,EACXC,WAAW,EAQeC,YAAY,EAUlCE,YAAY,EAGIC,kBAAkB;AAAA;AAAAiH,EAAA,GAvBjCzG,YAAY;AAAA,IAAAyG,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}