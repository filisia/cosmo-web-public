{"ast":null,"code":"// Try to get WebSocket URL from multiple sources\nconst getWebSocketUrlFromEnv=()=>{// Check for environment variable first\nif(process.env.REACT_APP_WS_URL){return process.env.REACT_APP_WS_URL;}// Check for runtime configuration (useful for different hosting environments)\nif(typeof window!=='undefined'&&window.COSMO_CONFIG&&window.COSMO_CONFIG.wsUrl){return window.COSMO_CONFIG.wsUrl;}// Legacy support for direct window variable\nif(typeof window!=='undefined'&&window.COSMO_WS_URL){return window.COSMO_WS_URL;}// Default fallback\nreturn'ws://localhost:8080';};const config={wsUrl:getWebSocketUrlFromEnv(),development:{wsUrl:getWebSocketUrlFromEnv()},production:{wsUrl:getWebSocketUrlFromEnv()}};const env=process.env.NODE_ENV||'development';const baseConfig=config[env];// Handle mixed content issues and provide comprehensive user guidance\nconst getWebSocketUrl=()=>{const url=baseConfig.wsUrl;// Log the current configuration for debugging\nconsole.log('🔧 WebSocket Configuration:',{url,protocol:typeof window!=='undefined'?window.location.protocol:'unknown',hostname:typeof window!=='undefined'?window.location.hostname:'unknown',runtimeConfig:typeof window!=='undefined'?window.COSMO_CONFIG:'not available'});// If we're on HTTPS and trying to connect to ws://, show comprehensive guidance\nif(typeof window!=='undefined'&&window.location.protocol==='https:'&&url.startsWith('ws://')){console.warn('⚠️ HTTPS site connecting to non-secure WebSocket. This may be blocked by the browser.');console.warn('💡 Solutions:');console.warn('   1. Visit via HTTP: http://'+window.location.hostname);console.warn('   2. Allow mixed content in browser settings');console.warn('   3. Update config.js to use wss:// if bridge supports it');console.warn('   4. Use a reverse proxy for secure WebSocket');// Show a comprehensive user-friendly message\nsetTimeout(()=>{const message=document.createElement('div');message.style.cssText=\"\\n        position: fixed;\\n        top: 20px;\\n        right: 20px;\\n        background: linear-gradient(135deg, #ff6b6b, #ee5a52);\\n        color: white;\\n        padding: 20px;\\n        border-radius: 12px;\\n        box-shadow: 0 8px 32px rgba(0,0,0,0.2);\\n        z-index: 10000;\\n        max-width: 350px;\\n        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\\n        font-size: 14px;\\n        line-height: 1.5;\\n        border-left: 4px solid #fff;\\n      \";message.innerHTML=\"\\n        <div style=\\\"margin-bottom: 12px;\\\">\\n          <strong style=\\\"font-size: 16px;\\\">\\uD83D\\uDD0C Connection Issue</strong>\\n        </div>\\n        <div style=\\\"margin-bottom: 12px;\\\">\\n          This site needs to connect to your local Cosmo Bridge app.\\n        </div>\\n        <div style=\\\"margin-bottom: 12px;\\\">\\n          <strong>Quick Fix:</strong> Visit via HTTP instead of HTTPS:\\n          <br><a href=\\\"http://\".concat(window.location.hostname,\"\\\" style=\\\"color: #fff; text-decoration: underline;\\\">http://\").concat(window.location.hostname,\"</a>\\n        </div>\\n        <div style=\\\"font-size: 12px; opacity: 0.9;\\\">\\n          Or allow \\\"mixed content\\\" in your browser settings.\\n        </div>\\n        <button onclick=\\\"this.parentElement.remove()\\\" style=\\\"\\n          position: absolute;\\n          top: 8px;\\n          right: 8px;\\n          background: none;\\n          border: none;\\n          color: white;\\n          font-size: 18px;\\n          cursor: pointer;\\n          opacity: 0.7;\\n        \\\">&times;</button>\\n      \");document.body.appendChild(message);// Auto-remove after 15 seconds\nsetTimeout(()=>{if(message.parentNode){message.parentNode.removeChild(message);}},15000);},2000);}return url;};export default{...baseConfig,wsUrl:getWebSocketUrl()};","map":{"version":3,"names":["getWebSocketUrlFromEnv","process","env","REACT_APP_WS_URL","window","COSMO_CONFIG","wsUrl","COSMO_WS_URL","config","development","production","NODE_ENV","baseConfig","getWebSocketUrl","url","console","log","protocol","location","hostname","runtimeConfig","startsWith","warn","setTimeout","message","document","createElement","style","cssText","innerHTML","concat","body","appendChild","parentNode","removeChild"],"sources":["/Users/abinop/code/CosmoCode/cosmo-web-public/src/config.js"],"sourcesContent":["// Try to get WebSocket URL from multiple sources\nconst getWebSocketUrlFromEnv = () => {\n  // Check for environment variable first\n  if (process.env.REACT_APP_WS_URL) {\n    return process.env.REACT_APP_WS_URL;\n  }\n  \n  // Check for runtime configuration (useful for different hosting environments)\n  if (typeof window !== 'undefined' && window.COSMO_CONFIG && window.COSMO_CONFIG.wsUrl) {\n    return window.COSMO_CONFIG.wsUrl;\n  }\n  \n  // Legacy support for direct window variable\n  if (typeof window !== 'undefined' && window.COSMO_WS_URL) {\n    return window.COSMO_WS_URL;\n  }\n  \n  // Default fallback\n  return 'ws://localhost:8080';\n};\n\nconst config = {\n  wsUrl: getWebSocketUrlFromEnv(),\n  development: {\n    wsUrl: getWebSocketUrlFromEnv(),\n  },\n  production: {\n    wsUrl: getWebSocketUrlFromEnv(),\n  },\n};\n\nconst env = process.env.NODE_ENV || 'development';\nconst baseConfig = config[env];\n\n// Handle mixed content issues and provide comprehensive user guidance\nconst getWebSocketUrl = () => {\n  const url = baseConfig.wsUrl;\n  \n  // Log the current configuration for debugging\n  console.log('🔧 WebSocket Configuration:', {\n    url,\n    protocol: typeof window !== 'undefined' ? window.location.protocol : 'unknown',\n    hostname: typeof window !== 'undefined' ? window.location.hostname : 'unknown',\n    runtimeConfig: typeof window !== 'undefined' ? window.COSMO_CONFIG : 'not available'\n  });\n  \n  // If we're on HTTPS and trying to connect to ws://, show comprehensive guidance\n  if (typeof window !== 'undefined' && window.location.protocol === 'https:' && url.startsWith('ws://')) {\n    console.warn('⚠️ HTTPS site connecting to non-secure WebSocket. This may be blocked by the browser.');\n    console.warn('💡 Solutions:');\n    console.warn('   1. Visit via HTTP: http://' + window.location.hostname);\n    console.warn('   2. Allow mixed content in browser settings');\n    console.warn('   3. Update config.js to use wss:// if bridge supports it');\n    console.warn('   4. Use a reverse proxy for secure WebSocket');\n    \n    // Show a comprehensive user-friendly message\n    setTimeout(() => {\n      const message = document.createElement('div');\n      message.style.cssText = `\n        position: fixed;\n        top: 20px;\n        right: 20px;\n        background: linear-gradient(135deg, #ff6b6b, #ee5a52);\n        color: white;\n        padding: 20px;\n        border-radius: 12px;\n        box-shadow: 0 8px 32px rgba(0,0,0,0.2);\n        z-index: 10000;\n        max-width: 350px;\n        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n        font-size: 14px;\n        line-height: 1.5;\n        border-left: 4px solid #fff;\n      `;\n      message.innerHTML = `\n        <div style=\"margin-bottom: 12px;\">\n          <strong style=\"font-size: 16px;\">🔌 Connection Issue</strong>\n        </div>\n        <div style=\"margin-bottom: 12px;\">\n          This site needs to connect to your local Cosmo Bridge app.\n        </div>\n        <div style=\"margin-bottom: 12px;\">\n          <strong>Quick Fix:</strong> Visit via HTTP instead of HTTPS:\n          <br><a href=\"http://${window.location.hostname}\" style=\"color: #fff; text-decoration: underline;\">http://${window.location.hostname}</a>\n        </div>\n        <div style=\"font-size: 12px; opacity: 0.9;\">\n          Or allow \"mixed content\" in your browser settings.\n        </div>\n        <button onclick=\"this.parentElement.remove()\" style=\"\n          position: absolute;\n          top: 8px;\n          right: 8px;\n          background: none;\n          border: none;\n          color: white;\n          font-size: 18px;\n          cursor: pointer;\n          opacity: 0.7;\n        \">&times;</button>\n      `;\n      document.body.appendChild(message);\n      \n      // Auto-remove after 15 seconds\n      setTimeout(() => {\n        if (message.parentNode) {\n          message.parentNode.removeChild(message);\n        }\n      }, 15000);\n    }, 2000);\n  }\n  \n  return url;\n};\n\nexport default {\n  ...baseConfig,\n  wsUrl: getWebSocketUrl()\n}; "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}