{"ast":null,"code":"var _jsxFileName = \"/Users/abinop/code/CosmoCode/cosmo-web-public/src/contexts/GameSettingsContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameSettingsContext = /*#__PURE__*/createContext();\nexport function GameSettingsProvider({\n  children\n}) {\n  _s();\n  const [settings, setSettings] = useState({\n    difficulty: 'medium',\n    soundEnabled: true,\n    vibrationEnabled: true,\n    gameLength: 60 // seconds\n  });\n  const updateSettings = newSettings => {\n    setSettings(prev => ({\n      ...prev,\n      ...newSettings\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(GameSettingsContext.Provider, {\n    value: {\n      settings,\n      updateSettings\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(GameSettingsProvider, \"gNXmbYF50b748gLj7PR47QJ3DHc=\");\n_c = GameSettingsProvider;\nexport function useGameSettings() {\n  _s2();\n  const context = useContext(GameSettingsContext);\n  if (!context) {\n    throw new Error('useGameSettings must be used within a GameSettingsProvider');\n  }\n  return context;\n}\n_s2(useGameSettings, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"GameSettingsProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","GameSettingsContext","GameSettingsProvider","children","_s","settings","setSettings","difficulty","soundEnabled","vibrationEnabled","gameLength","updateSettings","newSettings","prev","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useGameSettings","_s2","context","Error","$RefreshReg$"],"sources":["/Users/abinop/code/CosmoCode/cosmo-web-public/src/contexts/GameSettingsContext.js"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\n\nconst GameSettingsContext = createContext();\n\nexport function GameSettingsProvider({ children }) {\n  const [settings, setSettings] = useState({\n    difficulty: 'medium',\n    soundEnabled: true,\n    vibrationEnabled: true,\n    gameLength: 60, // seconds\n  });\n\n  const updateSettings = (newSettings) => {\n    setSettings(prev => ({ ...prev, ...newSettings }));\n  };\n\n  return (\n    <GameSettingsContext.Provider value={{ settings, updateSettings }}>\n      {children}\n    </GameSettingsContext.Provider>\n  );\n}\n\nexport function useGameSettings() {\n  const context = useContext(GameSettingsContext);\n  if (!context) {\n    throw new Error('useGameSettings must be used within a GameSettingsProvider');\n  }\n  return context;\n} "],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,mBAAmB,gBAAGL,aAAa,CAAC,CAAC;AAE3C,OAAO,SAASM,oBAAoBA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACjD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC;IACvCS,UAAU,EAAE,QAAQ;IACpBC,YAAY,EAAE,IAAI;IAClBC,gBAAgB,EAAE,IAAI;IACtBC,UAAU,EAAE,EAAE,CAAE;EAClB,CAAC,CAAC;EAEF,MAAMC,cAAc,GAAIC,WAAW,IAAK;IACtCN,WAAW,CAACO,IAAI,KAAK;MAAE,GAAGA,IAAI;MAAE,GAAGD;IAAY,CAAC,CAAC,CAAC;EACpD,CAAC;EAED,oBACEZ,OAAA,CAACC,mBAAmB,CAACa,QAAQ;IAACC,KAAK,EAAE;MAAEV,QAAQ;MAAEM;IAAe,CAAE;IAAAR,QAAA,EAC/DA;EAAQ;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACmB,CAAC;AAEnC;AAACf,EAAA,CAjBeF,oBAAoB;AAAAkB,EAAA,GAApBlB,oBAAoB;AAmBpC,OAAO,SAASmB,eAAeA,CAAA,EAAG;EAAAC,GAAA;EAChC,MAAMC,OAAO,GAAG1B,UAAU,CAACI,mBAAmB,CAAC;EAC/C,IAAI,CAACsB,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,4DAA4D,CAAC;EAC/E;EACA,OAAOD,OAAO;AAChB;AAACD,GAAA,CANeD,eAAe;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}