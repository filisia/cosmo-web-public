{"ast":null,"code":"import React,{useEffect,useState,useRef,useMemo,useCallback}from'react';import{useLocation,useNavigate}from'react-router-dom';import{useWebSocket}from'../contexts/WebSocketContext';import wsService from'../services/WebSocketService';import useMIDISound from'../hooks/useMIDISound';import useBackgroundMusic from'../hooks/useBackgroundMusic';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const colorMap=[{name:'blue',rgb:[0,0,4],tailwind:'border-blue-500',bgTailwind:'bg-blue-500'},{name:'green',rgb:[0,4,0],tailwind:'border-green-400',bgTailwind:'bg-green-400'},{name:'yellow',rgb:[4,3,0],tailwind:'border-yellow-400',bgTailwind:'bg-yellow-400'},{name:'orange',rgb:[4,1,0],tailwind:'border-orange-400',bgTailwind:'bg-orange-400'},{name:'red',rgb:[4,0,0],tailwind:'border-red-400',bgTailwind:'bg-red-400'},{name:'purple',rgb:[4,0,4],tailwind:'border-purple-400',bgTailwind:'bg-purple-400'}];export default function ExerciseGame(){const location=useLocation();const navigate=useNavigate();const{numCosmos=2,duration=30,soundEnabled=true,backgroundTrackId='brassbeat',backgroundVolume=30}=location.state||{};const[activeIndex,setActiveIndex]=useState(0);const[timeLeft,setTimeLeft]=useState(duration);const[gameOver,setGameOver]=useState(false);const[score,setScore]=useState(0);const[gameStarted,setGameStarted]=useState(false);const[feedback,setFeedback]=useState(null);// 'correct' or 'incorrect'\nconst{connectedDevices,deviceValues}=useWebSocket();const intervalRef=useRef(null);const cosmosToUse=useMemo(()=>connectedDevices.slice(0,numCosmos),[connectedDevices,numCosmos]);const lastPressRef=useRef({});const isUnmountingRef=useRef(false);const previousButtonStates=useRef({});const hasInitializedRef=useRef(false);const currentLightingState=useRef({});// Track current lighting state to prevent unnecessary updates\n// Initialize MIDI sound system\nconst playMIDINote=useMIDISound(soundEnabled);// Initialize background music system\nconst{selectedTrack,setVolume}=useBackgroundMusic(backgroundTrackId,gameStarted&&!gameOver);// Set background music volume\nuseEffect(()=>{setVolume(backgroundVolume/100);// Convert percentage to 0-1 range\n},[backgroundVolume,setVolume]);// Get the active device from cosmosToUse array\nconst activeDevice=useMemo(()=>{if(!cosmosToUse.length)return null;const device=cosmosToUse[activeIndex];// console.log(`[ExerciseGame] 🎯 Active device calculated:`, {\n//   activeIndex,\n//   totalDevices: cosmosToUse.length,\n//   activeDevice: device,\n//   allDevices: cosmosToUse.map(d => ({ id: d.id, name: d.name }))\n// });\nreturn device;},[cosmosToUse,activeIndex]);// Handle button press for the active device\nconst handleButtonPress=useCallback(deviceId=>{// console.log(`[ExerciseGame] 🎯 handleButtonPress called with deviceId: ${deviceId}`);\n// console.log(`[ExerciseGame] 🎯 activeDevice:`, activeDevice);\n// console.log(`[ExerciseGame] 🎯 activeIndex: ${activeIndex}, cosmosToUse:`, cosmosToUse.map(d => d.id));\n// Don't process button presses if game is over\nif(gameOver){console.log(\"[ExerciseGame] \\u274C Button press ignored - game is over\");return;}if(!activeDevice||deviceId!==activeDevice.id){console.log(\"[ExerciseGame] \\u274C Button press ignored - deviceId mismatch or no active device\");console.log(\"[ExerciseGame] \\u274C Expected: \".concat(activeDevice===null||activeDevice===void 0?void 0:activeDevice.id,\", Got: \").concat(deviceId));return;}console.log(\"[ExerciseGame] \\u2705 Correct button press! Score: \".concat(score+1,\", Moving from index \").concat(activeIndex,\" to \").concat((activeIndex+1)%cosmosToUse.length));// Play MIDI note based on the current active index\nplayMIDINote(activeIndex,100,0.3);setScore(s=>s+1);setActiveIndex(i=>(i+1)%cosmosToUse.length);},[activeDevice,cosmosToUse,score,activeIndex,playMIDINote,gameOver]);const checkButtonStates=useCallback(()=>{// Don't check button states if game is over\nif(gameOver){return;}if(!gameStarted||!activeDevice||!deviceValues[activeDevice.id]){console.log(\"[ExerciseGame] \\uD83D\\uDD0D checkButtonStates skipped:\",{gameStarted,hasActiveDevice:!!activeDevice,activeDeviceId:activeDevice===null||activeDevice===void 0?void 0:activeDevice.id,hasDeviceValue:!!deviceValues[activeDevice===null||activeDevice===void 0?void 0:activeDevice.id]});return;}const deviceValue=deviceValues[activeDevice.id];const currentButtonState=deviceValue.buttonState;const previousButtonState=previousButtonStates.current[activeDevice.id];// Ensure previousButtonState is initialized\nif(previousButtonState===undefined){previousButtonStates.current[activeDevice.id]=currentButtonState;console.log(\"[ExerciseGame] \\uD83D\\uDD0D Initialized previousButtonState for \".concat(activeDevice.id,\" to \").concat(currentButtonState));return;}const wasReleased=previousButtonState===0;const isPressed=currentButtonState===1;// console.log('[ExerciseGame] 🔍 Checking button states:', {\n//   deviceId: activeDevice.id,\n//   currentButtonState,\n//   previousButtonState,\n//   wasReleased,\n//   isPressed,\n//   gameStarted,\n//   hasDeviceValue: !!deviceValues[activeDevice.id],\n//   timestamp: new Date().toISOString()\n// });\nif(wasReleased&&isPressed){const now=Date.now();if(!lastPressRef.current[activeDevice.id]||now-lastPressRef.current[activeDevice.id]>500){lastPressRef.current[activeDevice.id]=now;console.log(\"[ExerciseGame] \\uD83C\\uDFAF Button pressed on device \".concat(activeDevice.id,\" - calling handleButtonPress\"));handleButtonPress(activeDevice.id);}else{console.log(\"[ExerciseGame] \\u23F0 Button press ignored due to debouncing (\".concat(now-lastPressRef.current[activeDevice.id],\"ms since last press)\"));}}const wasPressed=previousButtonState===1;const isReleased=currentButtonState===0;if(wasPressed&&isReleased){console.log(\"[ExerciseGame] \\uD83D\\uDD04 Button released on device \".concat(activeDevice.id));// Don't set luminosity here - let the activeIndex effect handle it\n}// Update previous state\npreviousButtonStates.current[activeDevice.id]=currentButtonState;},[gameStarted,activeDevice,deviceValues,handleButtonPress,gameOver]);// Check button states immediately when device values change\nuseEffect(()=>{if(gameStarted&&!gameOver&&activeDevice&&deviceValues[activeDevice.id]){checkButtonStates();}},[deviceValues,gameStarted,activeDevice,checkButtonStates,gameOver]);useEffect(()=>{if(gameOver)return;const interval=setInterval(()=>{if(!activeDevice)return;checkButtonStates();},250);intervalRef.current=interval;return()=>clearInterval(interval);},[gameOver,checkButtonStates,activeDevice]);useEffect(()=>{return()=>{if(!isUnmountingRef.current){isUnmountingRef.current=true;cosmosToUse.forEach((device,idx)=>{// wsService.setMode(device.id, 4);\nconst[r,g,b]=colorMap[idx%colorMap.length].rgb;wsService.setColor(device.id,r,g,b);wsService.setLuminosity(device.id,0);});}};},[]);useEffect(()=>{if(!numCosmos||!duration){navigate('/exercise-settings');}},[numCosmos,duration,navigate]);useEffect(()=>{if(gameOver)return;// Don't start countdown timer if duration is infinite (-1)\nif(duration===-1)return;intervalRef.current=setInterval(()=>{setTimeLeft(t=>{if(t<=1){clearInterval(intervalRef.current);setGameOver(true);return 0;}return t-1;});},1000);return()=>clearInterval(intervalRef.current);},[gameOver,duration]);useEffect(()=>{if(cosmosToUse.length>0&&!hasInitializedRef.current){hasInitializedRef.current=true;console.log(\"[ExerciseGame] \\uD83C\\uDFAE Initializing \".concat(cosmosToUse.length,\" devices\"));cosmosToUse.forEach((device,idx)=>{// Set mode, color, and luminosity for each device\nconsole.log(\"[ExerciseGame] \\uD83C\\uDFAE Setting up device \".concat(device.id,\" (index \").concat(idx,\") - Color: \").concat(colorMap[idx%colorMap.length].name,\", Luminosity: 0\"));const[r,g,b]=colorMap[idx%colorMap.length].rgb;wsService.setColor(device.id,r,g,b);wsService.setLuminosity(device.id,0);// Start with zero luminosity\ncurrentLightingState.current[device.id]=0;// Initialize lighting state tracking\n// Initialize button state immediately if available\nif(deviceValues[device.id]){previousButtonStates.current[device.id]=deviceValues[device.id].buttonState;console.log(\"[ExerciseGame] \\uD83C\\uDFAE Initial button state for \".concat(device.id,\": \").concat(deviceValues[device.id].buttonState));}else{// Initialize to released state if no device value available\npreviousButtonStates.current[device.id]=0;console.log(\"[ExerciseGame] \\uD83C\\uDFAE Initialized button state for \".concat(device.id,\" to 0 (released)\"));}});// Start the game immediately\nconsole.log(\"[ExerciseGame] \\uD83C\\uDFAE Game starting immediately\");setGameStarted(true);}},[cosmosToUse,deviceValues]);// Added deviceValues dependency to ensure proper initialization\n// Light up only the active device\nuseEffect(()=>{if(gameStarted&&cosmosToUse.length>0){// If game is over, turn off all devices\nif(gameOver){console.log(\"[ExerciseGame] \\uD83D\\uDCA1 Game over - turning off all devices\");cosmosToUse.forEach((device,idx)=>{if(currentLightingState.current[device.id]!==0){console.log(\"[ExerciseGame] \\uD83D\\uDCA1 Turning off device \".concat(device.id,\" (index \").concat(idx,\")\"));wsService.setLuminosity(device.id,0);currentLightingState.current[device.id]=0;}});return;}console.log(\"[ExerciseGame] \\uD83D\\uDCA1 Setting device lighting - Active index: \".concat(activeIndex,\", Total devices: \").concat(cosmosToUse.length));cosmosToUse.forEach((device,idx)=>{const shouldBeLit=idx===activeIndex;const luminosity=shouldBeLit?64:0;// Only update if the lighting state has actually changed\nif(currentLightingState.current[device.id]!==luminosity){console.log(\"[ExerciseGame] \\uD83D\\uDCA1 \".concat(shouldBeLit?'Lighting up':'Turning off',\" device \").concat(device.id,\" (index \").concat(idx,\") to luminosity \").concat(luminosity));wsService.setLuminosity(device.id,luminosity);currentLightingState.current[device.id]=luminosity;}else{console.log(\"[ExerciseGame] \\uD83D\\uDCA1 Skipping luminosity update for device \".concat(device.id,\" - already at \").concat(luminosity));}});}},[activeIndex,gameStarted,gameOver]);// Added gameOver dependency\n// --- UI ---\nif(gameOver){return/*#__PURE__*/_jsx(\"div\",{className:\"flex flex-col items-center justify-center min-h-screen bg-white\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white p-8 rounded shadow-md w-full max-w-md text-center\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-3xl font-bold mb-4\",children:\"Game Over!\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-xl mb-2\",children:[\"Score: \",score]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>navigate('/exercise-settings'),className:\"mt-4 bg-purple-600 text-white py-2 px-4 rounded-full hover:bg-purple-700 font-semibold\",children:\"Back to Settings\"})]})});}return/*#__PURE__*/_jsxs(\"div\",{className:\"min-h-screen flex flex-col bg-white\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between px-6 pt-4 pb-2\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>navigate('/exercise-settings'),className:\"rounded-full border-2 border-purple-400 text-purple-600 p-2 hover:bg-purple-50 transition\",\"aria-label\":\"Back\",children:/*#__PURE__*/_jsx(\"svg\",{width:\"28\",height:\"28\",fill:\"none\",viewBox:\"0 0 24 24\",children:/*#__PURE__*/_jsx(\"path\",{stroke:\"currentColor\",strokeWidth:\"2\",strokeLinecap:\"round\",strokeLinejoin:\"round\",d:\"M15 19l-7-7 7-7\"})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1 flex flex-col items-center\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2 mb-1\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-xl\",children:\"\\u23F3\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-lg font-semibold\",children:duration===-1?'∞':\"\".concat(String(Math.floor(timeLeft/60)).padStart(2,'0'),\":\").concat(String(timeLeft%60).padStart(2,'0'))})]}),/*#__PURE__*/_jsx(\"div\",{className:\"mt-1\",children:/*#__PURE__*/_jsxs(\"span\",{className:\"inline-flex items-center px-4 py-1 rounded-full bg-purple-100 text-purple-700 font-semibold text-base\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"mr-2 text-xl\",children:\"\\uD83C\\uDFB5\"}),\" \",selectedTrack.name]})}),/*#__PURE__*/_jsx(\"div\",{className:\"mt-2\",children:/*#__PURE__*/_jsxs(\"span\",{className:\"inline-flex items-center px-4 py-1 rounded-full bg-green-100 text-green-700 font-semibold text-base\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"mr-2 text-xl\",children:\"\\uD83C\\uDFC6\"}),\" Score: \",score]})})]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>navigate('/exercise-settings'),className:\"rounded-full border-2 border-gray-300 text-gray-600 p-2 hover:bg-gray-100 transition ml-2\",\"aria-label\":\"End Game\",children:/*#__PURE__*/_jsxs(\"svg\",{width:\"28\",height:\"28\",fill:\"none\",viewBox:\"0 0 24 24\",children:[/*#__PURE__*/_jsx(\"circle\",{cx:\"12\",cy:\"12\",r:\"10\",stroke:\"currentColor\",strokeWidth:\"2\"}),/*#__PURE__*/_jsx(\"rect\",{x:\"9\",y:\"9\",width:\"6\",height:\"6\",rx:\"1\",fill:\"currentColor\"})]})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"flex-1 flex flex-col items-center justify-center\",children:/*#__PURE__*/_jsx(\"div\",{className:\"flex flex-row items-center justify-center gap-12 mt-8\",children:cosmosToUse.map((device,idx)=>{const isActive=idx===activeIndex;const colorInfo=colorMap[idx%colorMap.length];return/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center justify-center rounded-full border-4 transition-all duration-200 \".concat(isActive?\"\".concat(colorInfo.bgTailwind,\" border-white\"):\"\".concat(colorInfo.tailwind,\" bg-white\")),style:{width:180,height:180,boxShadow:isActive?'0 0 20px rgba(0, 0, 0, 0.3)':'none'},children:isActive&&/*#__PURE__*/_jsx(\"div\",{className:\"w-full h-full rounded-full opacity-20\",style:{background:'radial-gradient(circle, rgba(255,255,255,0.3) 0%, transparent 70%)'}})},device.id);})})})]});}","map":{"version":3,"names":["React","useEffect","useState","useRef","useMemo","useCallback","useLocation","useNavigate","useWebSocket","wsService","useMIDISound","useBackgroundMusic","jsx","_jsx","jsxs","_jsxs","colorMap","name","rgb","tailwind","bgTailwind","ExerciseGame","location","navigate","numCosmos","duration","soundEnabled","backgroundTrackId","backgroundVolume","state","activeIndex","setActiveIndex","timeLeft","setTimeLeft","gameOver","setGameOver","score","setScore","gameStarted","setGameStarted","feedback","setFeedback","connectedDevices","deviceValues","intervalRef","cosmosToUse","slice","lastPressRef","isUnmountingRef","previousButtonStates","hasInitializedRef","currentLightingState","playMIDINote","selectedTrack","setVolume","activeDevice","length","device","handleButtonPress","deviceId","console","log","id","concat","s","i","checkButtonStates","hasActiveDevice","activeDeviceId","hasDeviceValue","deviceValue","currentButtonState","buttonState","previousButtonState","current","undefined","wasReleased","isPressed","now","Date","wasPressed","isReleased","interval","setInterval","clearInterval","forEach","idx","r","g","b","setColor","setLuminosity","t","shouldBeLit","luminosity","className","children","onClick","width","height","fill","viewBox","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","String","Math","floor","padStart","cx","cy","x","y","rx","map","isActive","colorInfo","style","boxShadow","background"],"sources":["/Users/abinop/code/CosmoCode/cosmo-web-public/src/components/ExerciseGame.js"],"sourcesContent":["import React, { useEffect, useState, useRef, useMemo, useCallback } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { useWebSocket } from '../contexts/WebSocketContext';\nimport wsService from '../services/WebSocketService';\nimport useMIDISound from '../hooks/useMIDISound';\nimport useBackgroundMusic from '../hooks/useBackgroundMusic';\n\nconst colorMap = [\n  { name: 'blue', rgb: [0, 0, 4], tailwind: 'border-blue-500', bgTailwind: 'bg-blue-500' },\n  { name: 'green', rgb: [0, 4, 0], tailwind: 'border-green-400', bgTailwind: 'bg-green-400' },\n  { name: 'yellow', rgb: [4, 3, 0], tailwind: 'border-yellow-400', bgTailwind: 'bg-yellow-400' },\n  { name: 'orange', rgb: [4, 1, 0], tailwind: 'border-orange-400', bgTailwind: 'bg-orange-400' },\n  { name: 'red', rgb: [4, 0, 0], tailwind: 'border-red-400', bgTailwind: 'bg-red-400' },\n  { name: 'purple', rgb: [4, 0, 4], tailwind: 'border-purple-400', bgTailwind: 'bg-purple-400' },\n];\n\nexport default function ExerciseGame() {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const { numCosmos = 2, duration = 30, soundEnabled = true, backgroundTrackId = 'brassbeat', backgroundVolume = 30 } = location.state || {};\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [timeLeft, setTimeLeft] = useState(duration);\n  const [gameOver, setGameOver] = useState(false);\n  const [score, setScore] = useState(0);\n  const [gameStarted, setGameStarted] = useState(false);\n  const [feedback, setFeedback] = useState(null); // 'correct' or 'incorrect'\n  const { connectedDevices, deviceValues } = useWebSocket();\n  const intervalRef = useRef(null);\n  const cosmosToUse = useMemo(() => connectedDevices.slice(0, numCosmos), [connectedDevices, numCosmos]);\n  const lastPressRef = useRef({});\n  const isUnmountingRef = useRef(false);\n  const previousButtonStates = useRef({});\n  const hasInitializedRef = useRef(false);\n  const currentLightingState = useRef({}); // Track current lighting state to prevent unnecessary updates\n\n  // Initialize MIDI sound system\n  const playMIDINote = useMIDISound(soundEnabled);\n  \n  // Initialize background music system\n  const { selectedTrack, setVolume } = useBackgroundMusic(backgroundTrackId, gameStarted && !gameOver);\n\n  // Set background music volume\n  useEffect(() => {\n    setVolume(backgroundVolume / 100); // Convert percentage to 0-1 range\n  }, [backgroundVolume, setVolume]);\n\n  // Get the active device from cosmosToUse array\n  const activeDevice = useMemo(() => {\n    if (!cosmosToUse.length) return null;\n    const device = cosmosToUse[activeIndex];\n    // console.log(`[ExerciseGame] 🎯 Active device calculated:`, {\n    //   activeIndex,\n    //   totalDevices: cosmosToUse.length,\n    //   activeDevice: device,\n    //   allDevices: cosmosToUse.map(d => ({ id: d.id, name: d.name }))\n    // });\n    return device;\n  }, [cosmosToUse, activeIndex]);\n\n  // Handle button press for the active device\n  const handleButtonPress = useCallback((deviceId) => {\n    // console.log(`[ExerciseGame] 🎯 handleButtonPress called with deviceId: ${deviceId}`);\n    // console.log(`[ExerciseGame] 🎯 activeDevice:`, activeDevice);\n    // console.log(`[ExerciseGame] 🎯 activeIndex: ${activeIndex}, cosmosToUse:`, cosmosToUse.map(d => d.id));\n    \n    // Don't process button presses if game is over\n    if (gameOver) {\n      console.log(`[ExerciseGame] ❌ Button press ignored - game is over`);\n      return;\n    }\n    \n    if (!activeDevice || deviceId !== activeDevice.id) {\n      console.log(`[ExerciseGame] ❌ Button press ignored - deviceId mismatch or no active device`);\n      console.log(`[ExerciseGame] ❌ Expected: ${activeDevice?.id}, Got: ${deviceId}`);\n      return;\n    }\n    console.log(`[ExerciseGame] ✅ Correct button press! Score: ${score + 1}, Moving from index ${activeIndex} to ${(activeIndex + 1) % cosmosToUse.length}`);\n    \n    // Play MIDI note based on the current active index\n    playMIDINote(activeIndex, 100, 0.3);\n    \n    setScore(s => s + 1);\n    setActiveIndex(i => (i + 1) % cosmosToUse.length);\n  }, [activeDevice, cosmosToUse, score, activeIndex, playMIDINote, gameOver]);\n\n  const checkButtonStates = useCallback(() => {\n    // Don't check button states if game is over\n    if (gameOver) {\n      return;\n    }\n    \n    if (!gameStarted || !activeDevice || !deviceValues[activeDevice.id]) {\n      console.log(`[ExerciseGame] 🔍 checkButtonStates skipped:`, {\n        gameStarted,\n        hasActiveDevice: !!activeDevice,\n        activeDeviceId: activeDevice?.id,\n        hasDeviceValue: !!deviceValues[activeDevice?.id]\n      });\n      return;\n    }\n    const deviceValue = deviceValues[activeDevice.id];\n    const currentButtonState = deviceValue.buttonState;\n    const previousButtonState = previousButtonStates.current[activeDevice.id];\n    \n    // Ensure previousButtonState is initialized\n    if (previousButtonState === undefined) {\n      previousButtonStates.current[activeDevice.id] = currentButtonState;\n      console.log(`[ExerciseGame] 🔍 Initialized previousButtonState for ${activeDevice.id} to ${currentButtonState}`);\n      return;\n    }\n    \n    const wasReleased = previousButtonState === 0;\n    const isPressed = currentButtonState === 1;\n    \n    // console.log('[ExerciseGame] 🔍 Checking button states:', {\n    //   deviceId: activeDevice.id,\n    //   currentButtonState,\n    //   previousButtonState,\n    //   wasReleased,\n    //   isPressed,\n    //   gameStarted,\n    //   hasDeviceValue: !!deviceValues[activeDevice.id],\n    //   timestamp: new Date().toISOString()\n    // });\n    \n    if (wasReleased && isPressed) {\n      const now = Date.now();\n      if (!lastPressRef.current[activeDevice.id] || now - lastPressRef.current[activeDevice.id] > 500) {\n        lastPressRef.current[activeDevice.id] = now;\n        console.log(`[ExerciseGame] 🎯 Button pressed on device ${activeDevice.id} - calling handleButtonPress`);\n        handleButtonPress(activeDevice.id);\n      } else {\n        console.log(`[ExerciseGame] ⏰ Button press ignored due to debouncing (${now - lastPressRef.current[activeDevice.id]}ms since last press)`);\n      }\n    }\n    \n    const wasPressed = previousButtonState === 1;\n    const isReleased = currentButtonState === 0;\n    if (wasPressed && isReleased) {\n      console.log(`[ExerciseGame] 🔄 Button released on device ${activeDevice.id}`);\n      // Don't set luminosity here - let the activeIndex effect handle it\n    }\n    \n    // Update previous state\n    previousButtonStates.current[activeDevice.id] = currentButtonState;\n  }, [gameStarted, activeDevice, deviceValues, handleButtonPress, gameOver]);\n\n  // Check button states immediately when device values change\n  useEffect(() => {\n    if (gameStarted && !gameOver && activeDevice && deviceValues[activeDevice.id]) {\n      checkButtonStates();\n    }\n  }, [deviceValues, gameStarted, activeDevice, checkButtonStates, gameOver]);\n\n  useEffect(() => {\n    if (gameOver) return;\n    const interval = setInterval(() => {\n      if (!activeDevice) return;\n      checkButtonStates();\n    }, 250);\n    intervalRef.current = interval;\n    return () => clearInterval(interval);\n  }, [gameOver, checkButtonStates, activeDevice]);\n\n  useEffect(() => {\n    return () => {\n      if (!isUnmountingRef.current) {\n        isUnmountingRef.current = true;\n        cosmosToUse.forEach((device, idx) => {\n          // wsService.setMode(device.id, 4);\n          const [r, g, b] = colorMap[idx % colorMap.length].rgb;\n          wsService.setColor(device.id, r, g, b);\n          wsService.setLuminosity(device.id, 0);\n        });\n      }\n    };\n  }, []);\n\n  useEffect(() => {\n    if (!numCosmos || !duration) {\n      navigate('/exercise-settings');\n    }\n  }, [numCosmos, duration, navigate]);\n\n  useEffect(() => {\n    if (gameOver) return;\n    \n    // Don't start countdown timer if duration is infinite (-1)\n    if (duration === -1) return;\n    \n    intervalRef.current = setInterval(() => {\n      setTimeLeft(t => {\n        if (t <= 1) {\n          clearInterval(intervalRef.current);\n          setGameOver(true);\n          return 0;\n        }\n        return t - 1;\n      });\n    }, 1000);\n    return () => clearInterval(intervalRef.current);\n  }, [gameOver, duration]);\n\n  useEffect(() => {\n    if (cosmosToUse.length > 0 && !hasInitializedRef.current) {\n      hasInitializedRef.current = true;\n      console.log(`[ExerciseGame] 🎮 Initializing ${cosmosToUse.length} devices`);\n      cosmosToUse.forEach((device, idx) => {\n        // Set mode, color, and luminosity for each device\n        console.log(`[ExerciseGame] 🎮 Setting up device ${device.id} (index ${idx}) - Color: ${colorMap[idx % colorMap.length].name}, Luminosity: 0`);\n        const [r, g, b] = colorMap[idx % colorMap.length].rgb;\n        wsService.setColor(device.id, r, g, b);\n        wsService.setLuminosity(device.id, 0); // Start with zero luminosity\n        currentLightingState.current[device.id] = 0; // Initialize lighting state tracking\n        \n        // Initialize button state immediately if available\n        if (deviceValues[device.id]) {\n          previousButtonStates.current[device.id] = deviceValues[device.id].buttonState;\n          console.log(`[ExerciseGame] 🎮 Initial button state for ${device.id}: ${deviceValues[device.id].buttonState}`);\n        } else {\n          // Initialize to released state if no device value available\n          previousButtonStates.current[device.id] = 0;\n          console.log(`[ExerciseGame] 🎮 Initialized button state for ${device.id} to 0 (released)`);\n        }\n      });\n      \n      // Start the game immediately\n      console.log(`[ExerciseGame] 🎮 Game starting immediately`);\n      setGameStarted(true);\n    }\n  }, [cosmosToUse, deviceValues]); // Added deviceValues dependency to ensure proper initialization\n\n  // Light up only the active device\n  useEffect(() => {\n    if (gameStarted && cosmosToUse.length > 0) {\n      // If game is over, turn off all devices\n      if (gameOver) {\n        console.log(`[ExerciseGame] 💡 Game over - turning off all devices`);\n        cosmosToUse.forEach((device, idx) => {\n          if (currentLightingState.current[device.id] !== 0) {\n            console.log(`[ExerciseGame] 💡 Turning off device ${device.id} (index ${idx})`);\n            wsService.setLuminosity(device.id, 0);\n            currentLightingState.current[device.id] = 0;\n          }\n        });\n        return;\n      }\n      \n      console.log(`[ExerciseGame] 💡 Setting device lighting - Active index: ${activeIndex}, Total devices: ${cosmosToUse.length}`);\n      cosmosToUse.forEach((device, idx) => {\n        const shouldBeLit = idx === activeIndex;\n        const luminosity = shouldBeLit ? 64 : 0;\n        \n        // Only update if the lighting state has actually changed\n        if (currentLightingState.current[device.id] !== luminosity) {\n          console.log(`[ExerciseGame] 💡 ${shouldBeLit ? 'Lighting up' : 'Turning off'} device ${device.id} (index ${idx}) to luminosity ${luminosity}`);\n          wsService.setLuminosity(device.id, luminosity);\n          currentLightingState.current[device.id] = luminosity;\n        } else {\n          console.log(`[ExerciseGame] 💡 Skipping luminosity update for device ${device.id} - already at ${luminosity}`);\n        }\n      });\n    }\n  }, [activeIndex, gameStarted, gameOver]); // Added gameOver dependency\n\n  // --- UI ---\n  if (gameOver) {\n    return (\n      <div className=\"flex flex-col items-center justify-center min-h-screen bg-white\">\n        <div className=\"bg-white p-8 rounded shadow-md w-full max-w-md text-center\">\n          <h1 className=\"text-3xl font-bold mb-4\">Game Over!</h1>\n          <p className=\"text-xl mb-2\">Score: {score}</p>\n          <button\n            onClick={() => navigate('/exercise-settings')}\n            className=\"mt-4 bg-purple-600 text-white py-2 px-4 rounded-full hover:bg-purple-700 font-semibold\"\n          >\n            Back to Settings\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen flex flex-col bg-white\">\n      {/* Top Bar */}\n      <div className=\"flex items-center justify-between px-6 pt-4 pb-2\">\n        <button\n          onClick={() => navigate('/exercise-settings')}\n          className=\"rounded-full border-2 border-purple-400 text-purple-600 p-2 hover:bg-purple-50 transition\"\n          aria-label=\"Back\"\n        >\n          <svg width=\"28\" height=\"28\" fill=\"none\" viewBox=\"0 0 24 24\"><path stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15 19l-7-7 7-7\"/></svg>\n        </button>\n        <div className=\"flex-1 flex flex-col items-center\">\n          <div className=\"flex items-center gap-2 mb-1\">\n            <span className=\"text-xl\">⏳</span>\n            <span className=\"text-lg font-semibold\">\n              {duration === -1 ? '∞' : `${String(Math.floor(timeLeft/60)).padStart(2,'0')}:${String(timeLeft%60).padStart(2,'0')}`}\n            </span>\n          </div>\n          <div className=\"mt-1\">\n            <span className=\"inline-flex items-center px-4 py-1 rounded-full bg-purple-100 text-purple-700 font-semibold text-base\">\n              <span className=\"mr-2 text-xl\">🎵</span> {selectedTrack.name}\n            </span>\n          </div>\n          <div className=\"mt-2\">\n            <span className=\"inline-flex items-center px-4 py-1 rounded-full bg-green-100 text-green-700 font-semibold text-base\">\n              <span className=\"mr-2 text-xl\">🏆</span> Score: {score}\n            </span>\n          </div>\n        </div>\n        <button\n          onClick={() => navigate('/exercise-settings')}\n          className=\"rounded-full border-2 border-gray-300 text-gray-600 p-2 hover:bg-gray-100 transition ml-2\"\n          aria-label=\"End Game\"\n        >\n          <svg width=\"28\" height=\"28\" fill=\"none\" viewBox=\"0 0 24 24\"><circle cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"2\"/><rect x=\"9\" y=\"9\" width=\"6\" height=\"6\" rx=\"1\" fill=\"currentColor\"/></svg>\n        </button>\n      </div>\n      {/* Game Area */}\n      <div className=\"flex-1 flex flex-col items-center justify-center\">\n        <div className=\"flex flex-row items-center justify-center gap-12 mt-8\">\n          {cosmosToUse.map((device, idx) => {\n            const isActive = idx === activeIndex;\n            const colorInfo = colorMap[idx % colorMap.length];\n            return (\n              <div\n                key={device.id}\n                className={`flex items-center justify-center rounded-full border-4 transition-all duration-200 ${\n                  isActive \n                    ? `${colorInfo.bgTailwind} border-white` \n                    : `${colorInfo.tailwind} bg-white`\n                }`}\n                style={{\n                  width: 180,\n                  height: 180,\n                  boxShadow: isActive ? '0 0 20px rgba(0, 0, 0, 0.3)' : 'none',\n                }}\n              >\n                {/* Optional: Add a subtle inner glow for active circles */}\n                {isActive && (\n                  <div \n                    className=\"w-full h-full rounded-full opacity-20\"\n                    style={{ \n                      background: 'radial-gradient(circle, rgba(255,255,255,0.3) 0%, transparent 70%)'\n                    }} \n                  />\n                )}\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n} "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}