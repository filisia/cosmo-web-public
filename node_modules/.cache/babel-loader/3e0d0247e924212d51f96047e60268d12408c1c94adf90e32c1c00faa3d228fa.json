{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useCallback, useMemo } from 'react';\n\n// MIDI notes corresponding to the Swift example: [72, 76, 79, 83, 84, 88]\n// These are C5, E5, G5, B5, C6, E6\nconst MIDI_NOTES = [72, 76, 79, 83, 84, 88];\nexport default function useMIDISound(soundEnabled = true) {\n  _s();\n  // Create audio context and oscillator\n  const audioContext = useMemo(() => {\n    if (typeof window !== 'undefined' && window.AudioContext) {\n      return new (window.AudioContext || window.webkitAudioContext)();\n    }\n    return null;\n  }, []);\n  const playNote = useCallback((noteIndex = 0, velocity = 100, duration = 0.3) => {\n    if (!soundEnabled || !audioContext) return;\n    try {\n      // Get the MIDI note number\n      const midiNote = MIDI_NOTES[noteIndex % MIDI_NOTES.length];\n\n      // Convert MIDI note to frequency\n      const frequency = 440 * Math.pow(2, (midiNote - 69) / 12);\n\n      // Create oscillator\n      const oscillator = audioContext.createOscillator();\n      const gainNode = audioContext.createGain();\n\n      // Connect nodes\n      oscillator.connect(gainNode);\n      gainNode.connect(audioContext.destination);\n\n      // Set oscillator properties\n      oscillator.type = 'sine';\n      oscillator.frequency.setValueAtTime(frequency, audioContext.currentTime);\n\n      // Set gain (volume) based on velocity\n      const gain = velocity / 100 * 0.3; // Scale down to prevent clipping\n      gainNode.gain.setValueAtTime(0, audioContext.currentTime);\n      gainNode.gain.linearRampToValueAtTime(gain, audioContext.currentTime + 0.01);\n      gainNode.gain.exponentialRampToValueAtTime(0.001, audioContext.currentTime + duration);\n\n      // Start and stop oscillator\n      oscillator.start(audioContext.currentTime);\n      oscillator.stop(audioContext.currentTime + duration);\n      console.log(`[MIDI] Playing note ${midiNote} (${frequency.toFixed(1)}Hz) with velocity ${velocity}`);\n    } catch (error) {\n      console.error('[MIDI] Error playing note:', error);\n    }\n  }, [soundEnabled, audioContext]);\n  return playNote;\n}\n_s(useMIDISound, \"JdEAZLlpuAa3TiLJDZ7MXO6W+6E=\");","map":{"version":3,"names":["useCallback","useMemo","MIDI_NOTES","useMIDISound","soundEnabled","_s","audioContext","window","AudioContext","webkitAudioContext","playNote","noteIndex","velocity","duration","midiNote","length","frequency","Math","pow","oscillator","createOscillator","gainNode","createGain","connect","destination","type","setValueAtTime","currentTime","gain","linearRampToValueAtTime","exponentialRampToValueAtTime","start","stop","console","log","toFixed","error"],"sources":["/Users/abinop/code/CosmoCode/cosmo-web-public/src/hooks/useMIDISound.js"],"sourcesContent":["import { useCallback, useMemo } from 'react';\n\n// MIDI notes corresponding to the Swift example: [72, 76, 79, 83, 84, 88]\n// These are C5, E5, G5, B5, C6, E6\nconst MIDI_NOTES = [72, 76, 79, 83, 84, 88];\n\nexport default function useMIDISound(soundEnabled = true) {\n  // Create audio context and oscillator\n  const audioContext = useMemo(() => {\n    if (typeof window !== 'undefined' && window.AudioContext) {\n      return new (window.AudioContext || window.webkitAudioContext)();\n    }\n    return null;\n  }, []);\n\n  const playNote = useCallback((noteIndex = 0, velocity = 100, duration = 0.3) => {\n    if (!soundEnabled || !audioContext) return;\n\n    try {\n      // Get the MIDI note number\n      const midiNote = MIDI_NOTES[noteIndex % MIDI_NOTES.length];\n      \n      // Convert MIDI note to frequency\n      const frequency = 440 * Math.pow(2, (midiNote - 69) / 12);\n      \n      // Create oscillator\n      const oscillator = audioContext.createOscillator();\n      const gainNode = audioContext.createGain();\n      \n      // Connect nodes\n      oscillator.connect(gainNode);\n      gainNode.connect(audioContext.destination);\n      \n      // Set oscillator properties\n      oscillator.type = 'sine';\n      oscillator.frequency.setValueAtTime(frequency, audioContext.currentTime);\n      \n      // Set gain (volume) based on velocity\n      const gain = (velocity / 100) * 0.3; // Scale down to prevent clipping\n      gainNode.gain.setValueAtTime(0, audioContext.currentTime);\n      gainNode.gain.linearRampToValueAtTime(gain, audioContext.currentTime + 0.01);\n      gainNode.gain.exponentialRampToValueAtTime(0.001, audioContext.currentTime + duration);\n      \n      // Start and stop oscillator\n      oscillator.start(audioContext.currentTime);\n      oscillator.stop(audioContext.currentTime + duration);\n      \n      console.log(`[MIDI] Playing note ${midiNote} (${frequency.toFixed(1)}Hz) with velocity ${velocity}`);\n    } catch (error) {\n      console.error('[MIDI] Error playing note:', error);\n    }\n  }, [soundEnabled, audioContext]);\n\n  return playNote;\n} "],"mappings":";AAAA,SAASA,WAAW,EAAEC,OAAO,QAAQ,OAAO;;AAE5C;AACA;AACA,MAAMC,UAAU,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AAE3C,eAAe,SAASC,YAAYA,CAACC,YAAY,GAAG,IAAI,EAAE;EAAAC,EAAA;EACxD;EACA,MAAMC,YAAY,GAAGL,OAAO,CAAC,MAAM;IACjC,IAAI,OAAOM,MAAM,KAAK,WAAW,IAAIA,MAAM,CAACC,YAAY,EAAE;MACxD,OAAO,KAAKD,MAAM,CAACC,YAAY,IAAID,MAAM,CAACE,kBAAkB,EAAE,CAAC;IACjE;IACA,OAAO,IAAI;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,QAAQ,GAAGV,WAAW,CAAC,CAACW,SAAS,GAAG,CAAC,EAAEC,QAAQ,GAAG,GAAG,EAAEC,QAAQ,GAAG,GAAG,KAAK;IAC9E,IAAI,CAACT,YAAY,IAAI,CAACE,YAAY,EAAE;IAEpC,IAAI;MACF;MACA,MAAMQ,QAAQ,GAAGZ,UAAU,CAACS,SAAS,GAAGT,UAAU,CAACa,MAAM,CAAC;;MAE1D;MACA,MAAMC,SAAS,GAAG,GAAG,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE,CAACJ,QAAQ,GAAG,EAAE,IAAI,EAAE,CAAC;;MAEzD;MACA,MAAMK,UAAU,GAAGb,YAAY,CAACc,gBAAgB,CAAC,CAAC;MAClD,MAAMC,QAAQ,GAAGf,YAAY,CAACgB,UAAU,CAAC,CAAC;;MAE1C;MACAH,UAAU,CAACI,OAAO,CAACF,QAAQ,CAAC;MAC5BA,QAAQ,CAACE,OAAO,CAACjB,YAAY,CAACkB,WAAW,CAAC;;MAE1C;MACAL,UAAU,CAACM,IAAI,GAAG,MAAM;MACxBN,UAAU,CAACH,SAAS,CAACU,cAAc,CAACV,SAAS,EAAEV,YAAY,CAACqB,WAAW,CAAC;;MAExE;MACA,MAAMC,IAAI,GAAIhB,QAAQ,GAAG,GAAG,GAAI,GAAG,CAAC,CAAC;MACrCS,QAAQ,CAACO,IAAI,CAACF,cAAc,CAAC,CAAC,EAAEpB,YAAY,CAACqB,WAAW,CAAC;MACzDN,QAAQ,CAACO,IAAI,CAACC,uBAAuB,CAACD,IAAI,EAAEtB,YAAY,CAACqB,WAAW,GAAG,IAAI,CAAC;MAC5EN,QAAQ,CAACO,IAAI,CAACE,4BAA4B,CAAC,KAAK,EAAExB,YAAY,CAACqB,WAAW,GAAGd,QAAQ,CAAC;;MAEtF;MACAM,UAAU,CAACY,KAAK,CAACzB,YAAY,CAACqB,WAAW,CAAC;MAC1CR,UAAU,CAACa,IAAI,CAAC1B,YAAY,CAACqB,WAAW,GAAGd,QAAQ,CAAC;MAEpDoB,OAAO,CAACC,GAAG,CAAE,uBAAsBpB,QAAS,KAAIE,SAAS,CAACmB,OAAO,CAAC,CAAC,CAAE,qBAAoBvB,QAAS,EAAC,CAAC;IACtG,CAAC,CAAC,OAAOwB,KAAK,EAAE;MACdH,OAAO,CAACG,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACpD;EACF,CAAC,EAAE,CAAChC,YAAY,EAAEE,YAAY,CAAC,CAAC;EAEhC,OAAOI,QAAQ;AACjB;AAACL,EAAA,CAhDuBF,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}