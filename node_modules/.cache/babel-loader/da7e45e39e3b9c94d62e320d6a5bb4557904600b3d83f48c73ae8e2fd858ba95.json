{"ast":null,"code":"// Try to get WebSocket URL from multiple sources\nconst getWebSocketUrlFromEnv=()=>{console.log('🔧 getWebSocketUrlFromEnv called');console.log('🔧 process.env.REACT_APP_WS_URL:',process.env.REACT_APP_WS_URL);console.log('🔧 window.COSMO_CONFIG:',typeof window!=='undefined'?window.COSMO_CONFIG:'window undefined');// Check for environment variable first\nif(process.env.REACT_APP_WS_URL){console.log('🔧 Using env var:',process.env.REACT_APP_WS_URL);return process.env.REACT_APP_WS_URL;}// Check for runtime configuration (useful for different hosting environments)\nif(typeof window!=='undefined'&&window.COSMO_CONFIG&&window.COSMO_CONFIG.wsUrl){console.log('🔧 Using window.COSMO_CONFIG.wsUrl:',window.COSMO_CONFIG.wsUrl);return window.COSMO_CONFIG.wsUrl;}// Legacy support for direct window variable\nif(typeof window!=='undefined'&&window.COSMO_WS_URL){console.log('🔧 Using window.COSMO_WS_URL:',window.COSMO_WS_URL);return window.COSMO_WS_URL;}// Default fallback - use secure WebSocket for HTTPS\nconst fallbackUrl=typeof window!=='undefined'&&window.location.protocol==='https:'?'wss://localhost:8443':'ws://localhost:8080';console.log('🔧 Using fallback URL:',fallbackUrl);return fallbackUrl;};const config={wsUrl:getWebSocketUrlFromEnv(),development:{wsUrl:getWebSocketUrlFromEnv()},production:{wsUrl:getWebSocketUrlFromEnv()}};const env=process.env.NODE_ENV||'development';const baseConfig=config[env];// Handle mixed content issues and provide comprehensive user guidance\nconst getWebSocketUrl=()=>{const url=baseConfig.wsUrl;// Log the current configuration for debugging\nconsole.log('🔧 WebSocket Configuration:',{url,protocol:typeof window!=='undefined'?window.location.protocol:'unknown',hostname:typeof window!=='undefined'?window.location.hostname:'unknown',runtimeConfig:typeof window!=='undefined'?window.COSMO_CONFIG:'not available'});// If we're on HTTPS and trying to connect to ws://, show comprehensive guidance\nif(typeof window!=='undefined'&&window.location.protocol==='https:'&&url.startsWith('ws://')){console.warn('⚠️ HTTPS site connecting to non-secure WebSocket. This may be blocked by the browser.');console.warn('💡 Solutions:');console.warn('   1. Visit via HTTP: http://'+window.location.hostname);console.warn('   2. Allow mixed content in browser settings');console.warn('   3. Update config.js to use wss:// if bridge supports it');console.warn('   4. Use a reverse proxy for secure WebSocket');// Show a comprehensive user-friendly message\nsetTimeout(()=>{const message=document.createElement('div');message.style.cssText=\"\\n        position: fixed;\\n        top: 20px;\\n        right: 20px;\\n        background: linear-gradient(135deg, #ff6b6b, #ee5a52);\\n        color: white;\\n        padding: 20px;\\n        border-radius: 12px;\\n        box-shadow: 0 8px 32px rgba(0,0,0,0.2);\\n        z-index: 10000;\\n        max-width: 450px;\\n        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\\n        font-size: 14px;\\n        line-height: 1.5;\\n        border-left: 4px solid #fff;\\n      \";message.innerHTML=\"\\n        <div style=\\\"margin-bottom: 12px;\\\">\\n          <strong style=\\\"font-size: 16px;\\\">\\uD83D\\uDD0C Bridge Connection Required</strong>\\n        </div>\\n        <div style=\\\"margin-bottom: 12px;\\\">\\n          This app needs to connect to your local Cosmo Bridge. Each user needs their own bridge running.\\n        </div>\\n        <div style=\\\"margin-bottom: 12px;\\\">\\n          <strong>Quick Solutions:</strong>\\n          <br>\\u2022 <a href=\\\"/setup-guide.html\\\" style=\\\"color: #fff; text-decoration: underline;\\\">\\uD83D\\uDCD6 Setup Guide</a>\\n          <br>\\u2022 <a href=\\\"http://\".concat(window.location.hostname,\"\\\" style=\\\"color: #fff; text-decoration: underline;\\\">\\uD83C\\uDF10 Use HTTP instead</a>\\n          <br>\\u2022 <a href=\\\"#\\\" onclick=\\\"allowMixedContent()\\\" style=\\\"color: #fff; text-decoration: underline;\\\">\\uD83D\\uDD13 Allow Mixed Content</a>\\n        </div>\\n        <div style=\\\"font-size: 12px; opacity: 0.9;\\\">\\n          The bridge must be running on your computer for this app to work.\\n        </div>\\n        <button onclick=\\\"this.parentElement.remove()\\\" style=\\\"\\n          position: absolute;\\n          top: 8px;\\n          right: 8px;\\n          background: none;\\n          border: none;\\n          color: white;\\n          font-size: 18px;\\n          cursor: pointer;\\n          opacity: 0.7;\\n        \\\">&times;</button>\\n      \");document.body.appendChild(message);// Auto-remove after 30 seconds\nsetTimeout(()=>{if(message.parentNode){message.parentNode.removeChild(message);}},30000);},2000);}return url;};// Add global function to help users allow mixed content\nif(typeof window!=='undefined'){window.allowMixedContent=function(){const message=document.createElement('div');message.style.cssText=\"\\n      position: fixed;\\n      top: 50%;\\n      left: 50%;\\n      transform: translate(-50%, -50%);\\n      background: white;\\n      color: #333;\\n      padding: 30px;\\n      border-radius: 12px;\\n      box-shadow: 0 10px 40px rgba(0,0,0,0.3);\\n      z-index: 10001;\\n      max-width: 500px;\\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\\n      font-size: 14px;\\n      line-height: 1.6;\\n    \";message.innerHTML=\"\\n      <h3 style=\\\"margin-top: 0; color: #2c3e50;\\\">\\uD83D\\uDD13 Allow Mixed Content</h3>\\n      <p><strong>To allow this app to connect to your local bridge:</strong></p>\\n      \\n      <h4>Chrome/Edge:</h4>\\n      <ol>\\n        <li>Click the lock icon \\uD83D\\uDD12 in the address bar</li>\\n        <li>Click \\\"Site settings\\\"</li>\\n        <li>Find \\\"Insecure content\\\" and change to \\\"Allow\\\"</li>\\n        <li>Refresh the page</li>\\n      </ol>\\n      \\n      <h4>Firefox:</h4>\\n        <ol>\\n        <li>Click the shield icon \\uD83D\\uDEE1\\uFE0F in the address bar</li>\\n        <li>Click \\\"Site permissions\\\"</li>\\n        <li>Find \\\"Access your location\\\" and change to \\\"Allow\\\"</li>\\n        <li>Refresh the page</li>\\n      </ol>\\n      \\n      <h4>Safari:</h4>\\n      <ol>\\n        <li>Go to Safari > Preferences > Security</li>\\n        <li>Uncheck \\\"Block all cookies\\\"</li>\\n        <li>Refresh the page</li>\\n      </ol>\\n      \\n      <p style=\\\"margin-top: 20px; font-size: 12px; color: #666;\\\">\\n        <strong>Note:</strong> This is safe because you're connecting to your own local computer.\\n      </p>\\n      \\n      <button onclick=\\\"this.parentElement.remove(); location.reload();\\\" style=\\\"\\n        background: #3498db;\\n        color: white;\\n        border: none;\\n        padding: 10px 20px;\\n        border-radius: 6px;\\n        cursor: pointer;\\n        margin-top: 15px;\\n      \\\">Got it, refresh page</button>\\n      \\n      <button onclick=\\\"this.parentElement.remove()\\\" style=\\\"\\n        background: #95a5a6;\\n        color: white;\\n        border: none;\\n        padding: 10px 20px;\\n        border-radius: 6px;\\n        cursor: pointer;\\n        margin-top: 15px;\\n        margin-left: 10px;\\n      \\\">Close</button>\\n    \";document.body.appendChild(message);};}export default{...baseConfig,wsUrl:getWebSocketUrl()};","map":{"version":3,"names":["getWebSocketUrlFromEnv","console","log","process","env","REACT_APP_WS_URL","window","COSMO_CONFIG","wsUrl","COSMO_WS_URL","fallbackUrl","location","protocol","config","development","production","NODE_ENV","baseConfig","getWebSocketUrl","url","hostname","runtimeConfig","startsWith","warn","setTimeout","message","document","createElement","style","cssText","innerHTML","concat","body","appendChild","parentNode","removeChild","allowMixedContent"],"sources":["/Users/abinop/code/CosmoCode/cosmo-web-public/src/config.js"],"sourcesContent":["// Try to get WebSocket URL from multiple sources\nconst getWebSocketUrlFromEnv = () => {\n  console.log('🔧 getWebSocketUrlFromEnv called');\n  console.log('🔧 process.env.REACT_APP_WS_URL:', process.env.REACT_APP_WS_URL);\n  console.log('🔧 window.COSMO_CONFIG:', typeof window !== 'undefined' ? window.COSMO_CONFIG : 'window undefined');\n  \n  // Check for environment variable first\n  if (process.env.REACT_APP_WS_URL) {\n    console.log('🔧 Using env var:', process.env.REACT_APP_WS_URL);\n    return process.env.REACT_APP_WS_URL;\n  }\n  \n  // Check for runtime configuration (useful for different hosting environments)\n  if (typeof window !== 'undefined' && window.COSMO_CONFIG && window.COSMO_CONFIG.wsUrl) {\n    console.log('🔧 Using window.COSMO_CONFIG.wsUrl:', window.COSMO_CONFIG.wsUrl);\n    return window.COSMO_CONFIG.wsUrl;\n  }\n  \n  // Legacy support for direct window variable\n  if (typeof window !== 'undefined' && window.COSMO_WS_URL) {\n    console.log('🔧 Using window.COSMO_WS_URL:', window.COSMO_WS_URL);\n    return window.COSMO_WS_URL;\n  }\n  \n  // Default fallback - use secure WebSocket for HTTPS\n  const fallbackUrl = typeof window !== 'undefined' && window.location.protocol === 'https:' \n    ? 'wss://localhost:8443' \n    : 'ws://localhost:8080';\n  console.log('🔧 Using fallback URL:', fallbackUrl);\n  return fallbackUrl;\n};\n\nconst config = {\n  wsUrl: getWebSocketUrlFromEnv(),\n  development: {\n    wsUrl: getWebSocketUrlFromEnv(),\n  },\n  production: {\n    wsUrl: getWebSocketUrlFromEnv(),\n  },\n};\n\nconst env = process.env.NODE_ENV || 'development';\nconst baseConfig = config[env];\n\n// Handle mixed content issues and provide comprehensive user guidance\nconst getWebSocketUrl = () => {\n  const url = baseConfig.wsUrl;\n  \n  // Log the current configuration for debugging\n  console.log('🔧 WebSocket Configuration:', {\n    url,\n    protocol: typeof window !== 'undefined' ? window.location.protocol : 'unknown',\n    hostname: typeof window !== 'undefined' ? window.location.hostname : 'unknown',\n    runtimeConfig: typeof window !== 'undefined' ? window.COSMO_CONFIG : 'not available'\n  });\n  \n  // If we're on HTTPS and trying to connect to ws://, show comprehensive guidance\n  if (typeof window !== 'undefined' && window.location.protocol === 'https:' && url.startsWith('ws://')) {\n    console.warn('⚠️ HTTPS site connecting to non-secure WebSocket. This may be blocked by the browser.');\n    console.warn('💡 Solutions:');\n    console.warn('   1. Visit via HTTP: http://' + window.location.hostname);\n    console.warn('   2. Allow mixed content in browser settings');\n    console.warn('   3. Update config.js to use wss:// if bridge supports it');\n    console.warn('   4. Use a reverse proxy for secure WebSocket');\n    \n    // Show a comprehensive user-friendly message\n    setTimeout(() => {\n      const message = document.createElement('div');\n      message.style.cssText = `\n        position: fixed;\n        top: 20px;\n        right: 20px;\n        background: linear-gradient(135deg, #ff6b6b, #ee5a52);\n        color: white;\n        padding: 20px;\n        border-radius: 12px;\n        box-shadow: 0 8px 32px rgba(0,0,0,0.2);\n        z-index: 10000;\n        max-width: 450px;\n        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n        font-size: 14px;\n        line-height: 1.5;\n        border-left: 4px solid #fff;\n      `;\n      message.innerHTML = `\n        <div style=\"margin-bottom: 12px;\">\n          <strong style=\"font-size: 16px;\">🔌 Bridge Connection Required</strong>\n        </div>\n        <div style=\"margin-bottom: 12px;\">\n          This app needs to connect to your local Cosmo Bridge. Each user needs their own bridge running.\n        </div>\n        <div style=\"margin-bottom: 12px;\">\n          <strong>Quick Solutions:</strong>\n          <br>• <a href=\"/setup-guide.html\" style=\"color: #fff; text-decoration: underline;\">📖 Setup Guide</a>\n          <br>• <a href=\"http://${window.location.hostname}\" style=\"color: #fff; text-decoration: underline;\">🌐 Use HTTP instead</a>\n          <br>• <a href=\"#\" onclick=\"allowMixedContent()\" style=\"color: #fff; text-decoration: underline;\">🔓 Allow Mixed Content</a>\n        </div>\n        <div style=\"font-size: 12px; opacity: 0.9;\">\n          The bridge must be running on your computer for this app to work.\n        </div>\n        <button onclick=\"this.parentElement.remove()\" style=\"\n          position: absolute;\n          top: 8px;\n          right: 8px;\n          background: none;\n          border: none;\n          color: white;\n          font-size: 18px;\n          cursor: pointer;\n          opacity: 0.7;\n        \">&times;</button>\n      `;\n      document.body.appendChild(message);\n      \n      // Auto-remove after 30 seconds\n      setTimeout(() => {\n        if (message.parentNode) {\n          message.parentNode.removeChild(message);\n        }\n      }, 30000);\n    }, 2000);\n  }\n  \n  return url;\n};\n\n// Add global function to help users allow mixed content\nif (typeof window !== 'undefined') {\n  window.allowMixedContent = function() {\n    const message = document.createElement('div');\n    message.style.cssText = `\n      position: fixed;\n      top: 50%;\n      left: 50%;\n      transform: translate(-50%, -50%);\n      background: white;\n      color: #333;\n      padding: 30px;\n      border-radius: 12px;\n      box-shadow: 0 10px 40px rgba(0,0,0,0.3);\n      z-index: 10001;\n      max-width: 500px;\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n      font-size: 14px;\n      line-height: 1.6;\n    `;\n    message.innerHTML = `\n      <h3 style=\"margin-top: 0; color: #2c3e50;\">🔓 Allow Mixed Content</h3>\n      <p><strong>To allow this app to connect to your local bridge:</strong></p>\n      \n      <h4>Chrome/Edge:</h4>\n      <ol>\n        <li>Click the lock icon 🔒 in the address bar</li>\n        <li>Click \"Site settings\"</li>\n        <li>Find \"Insecure content\" and change to \"Allow\"</li>\n        <li>Refresh the page</li>\n      </ol>\n      \n      <h4>Firefox:</h4>\n        <ol>\n        <li>Click the shield icon 🛡️ in the address bar</li>\n        <li>Click \"Site permissions\"</li>\n        <li>Find \"Access your location\" and change to \"Allow\"</li>\n        <li>Refresh the page</li>\n      </ol>\n      \n      <h4>Safari:</h4>\n      <ol>\n        <li>Go to Safari > Preferences > Security</li>\n        <li>Uncheck \"Block all cookies\"</li>\n        <li>Refresh the page</li>\n      </ol>\n      \n      <p style=\"margin-top: 20px; font-size: 12px; color: #666;\">\n        <strong>Note:</strong> This is safe because you're connecting to your own local computer.\n      </p>\n      \n      <button onclick=\"this.parentElement.remove(); location.reload();\" style=\"\n        background: #3498db;\n        color: white;\n        border: none;\n        padding: 10px 20px;\n        border-radius: 6px;\n        cursor: pointer;\n        margin-top: 15px;\n      \">Got it, refresh page</button>\n      \n      <button onclick=\"this.parentElement.remove()\" style=\"\n        background: #95a5a6;\n        color: white;\n        border: none;\n        padding: 10px 20px;\n        border-radius: 6px;\n        cursor: pointer;\n        margin-top: 15px;\n        margin-left: 10px;\n      \">Close</button>\n    `;\n    document.body.appendChild(message);\n  };\n}\n\nexport default {\n  ...baseConfig,\n  wsUrl: getWebSocketUrl()\n}; "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}